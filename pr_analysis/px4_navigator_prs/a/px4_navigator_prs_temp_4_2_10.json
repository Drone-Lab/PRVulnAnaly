[
  {
    "title": "Navigator RTL: run find_RTL_destination() only on_inactive",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21782",
    "number": 21782,
    "created_at": "2023-06-30T10:13:08Z",
    "merged": true,
    "merged_at": "2023-07-04T07:36:22Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "\r\n### Solved Problem\r\nRTL::find_RTL_destination() is called also when the RTL has already started, and can override the set _destination etc. I don't think that's desired.\r\n\r\nThis was introduced through a refactor commit: https://github.com/PX4/PX4-Autopilot/pull/21208/commits/2bff49475b504b29eba8fb5cf1cb65400ea80482\r\n\r\n### Solution\r\nRemove it again.\r\n\r\n### Changelog Entry\r\nFor release notes:\r\n```\r\nBugfix: RTL: do not edit RTL destination once RTL is started\r\n```\r\n\r\n\r\n### Test coverage\r\n- Unit/integration test: ...\r\n- Simulation/hardware testing logs: https://review.px4.io/\r\n\r\n",
      "issue_comments": [],
      "review_comments": [],
      "reviews": [
        {
          "author": "RomanBapst",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        },
        {
          "author": "MaEtUgR",
          "created_at": "",
          "body": "I assume this is only there such that active and inactive are the same.\r\nThe `_destination_check_time` gets reset now even if the digestion does not change. That's not a problem in my eyes. When you switch out of RTL and in again within less than a second then the old destination stays. Maybe that's even a feature. It could be named `_slow_rate_timestamp` or so.",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Navigator: loiter: remove unnecessary _loiter_pos_set",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21776",
    "number": 21776,
    "created_at": "2023-06-29T12:50:08Z",
    "merged": true,
    "merged_at": "2023-06-30T13:40:21Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "### Solved Problem\r\nWhile working on https://github.com/PX4/PX4-Autopilot/pull/21775 I noticed this seemingly unnecessary class variable `_loiter_pos_set`, that was set to false in `on_inactive()` or in `on_active`, and then though only ever checked in `on_activation` (through `set_loiter_position()`). I don't see how it could be false when entering on_activation(), and thus can just be removed, or am I missing something?\r\n\r\n### Solution\r\nRemove it!\r\n\r\n### Changelog Entry\r\nFor release notes:\r\n```\r\nRefactor: remove unnecessary variable\r\n```\r\n\r\n### Test coverage\r\nBit of SITL testing.\r\n\r\n",
      "issue_comments": [
        {
          "author": "junwoo091400",
          "created_at": "2023-06-30T14:39:16Z",
          "body": "![image](https://github.com/PX4/PX4-Autopilot/assets/23277211/50c94e3d-b230-4dd2-946f-cea632b8088c)\r\n\r\nIdk why but the merge commit in main branch itself doesn't show these build failures, any clue why in this PR page itself it shows so many build errors? @MaEtUgR ",
          "type": "issue_comment"
        }
      ],
      "review_comments": [
        {
          "author": "MaEtUgR",
          "created_at": "2023-06-30T12:03:23Z",
          "body": "```suggestion\r\n```",
          "path": "src/modules/navigator/loiter.h",
          "position": 1,
          "type": "review_comment"
        }
      ],
      "reviews": [
        {
          "author": "MaEtUgR",
          "created_at": "",
          "body": "It was introduced here: https://github.com/PX4/PX4-Autopilot/commit/8960ab3402a87b182d17ab1b3cb165115e0f4bad\r\nBut I cannot possibly understand what for. Maybe an unfinished thought about setting the loiter position once armed when already being in hold mode but I'm pretty sure it never worked correctly since as you mention the loiter point is never set again once hold mode is engaged 🤷‍♂️\r\n\r\nMaybe a draft implementation contained a second call to `set_loiter_position()` and that's where it had an effect.\r\n\r\nI also did some tests and I cannot find a case to enter the loiter's `on_activation()` with the flag true.",
          "state": "DISMISSED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Navigator: Loiter: always establish new Loiter with center at current position",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21775",
    "number": 21775,
    "created_at": "2023-06-29T12:43:22Z",
    "merged": true,
    "merged_at": "2023-07-04T07:35:41Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "### Solved Problem\r\nhttps://github.com/PX4/PX4-Autopilot/issues/21702\r\n\r\nVehicle keeps flying towards Loiter waypoint if Hold mode is selected. In the past we within Navigator set the type to POSITION when far away from a Loiter waypoint, and then only to LOITER when really on established loiter, but this distinction is now no longer part of Navigator and the FW position controller handles it.\r\n\r\n### Solution\r\nWhen switching into Hold mode establish a Loiter around current position, even if we were before already loitering (eg in Mission mode). This results in the same behavior when switching into Hold/Loiter mode directly (either through RC switch or in the flight mode selection in QGC) or through the \"Hold\" button in QGC (which sends a DO_REPOSITION with the fields at the current position). \r\n\r\nIn this screen recording you see the behavior prior and after this PR.\r\nhttps://github.com/PX4/PX4-Autopilot/assets/26798987/9079b575-77fc-40a2-be54-b3c11816cca3\r\n\r\n### Changelog Entry\r\nFor release notes:\r\n```\r\nBugfix: Fixed-wing: Always establish loiter around current position when switching into Hold mode\r\n```\r\n\r\n\r\n### Alternatives\r\nFix detection on whether we're currently on an established loiter, and in that case don't loiter around current position but keep established loiter. Personally I though prefer to stick to Hold = Loiter around current position always. Imagine being on a huge loiter. If the vehicle then keeps following it it's hardly anymore \"Holding position\". \r\n\r\n",
      "issue_comments": [
        {
          "author": "sfuhrer",
          "created_at": "2023-06-30T18:26:40Z",
          "body": "> But while testing that I found that when I press pause in QGC it actually flies to the next waypoint still and stops there. The code changed it here not called at all in this case probably because of the reposition command like you wrote.\r\n\r\nWhich QGC version did you test with? I couldn't reproduce with mine (v4.2.6 from this March). But yes, like you said not affected by this PR.",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": [
        {
          "author": "MaEtUgR",
          "created_at": "",
          "body": "Makes sense to me.\r\nI tested and with the multirotor I could not get it to not stop when just changing to hold mode also before.\r\n\r\nBut while testing that I found that when I press pause in QGC it actually flies to the next waypoint still and stops there. The code changed it here not called at all in this case probably because of the reposition command like you wrote.",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Some parameter cleanup",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21736",
    "number": 21736,
    "created_at": "2023-06-19T10:13:47Z",
    "merged": true,
    "merged_at": "2023-07-17T08:35:03Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "### Solved Problem\r\nSafes a bit of flash and reduces entropy by removing two params that aren't really required anymore. \r\n\r\n### Solution\r\n\r\n### Changelog Entry\r\n\r\n```\r\nRemove COM_ARM_ARSP_EN and VT_B_DEC_FF params, plus shorten parameter descriptions\r\n```\r\n\r\n",
      "issue_comments": [
        {
          "author": "DronecodeBot",
          "created_at": "2024-07-25T00:45:43Z",
          "body": "This pull request has been mentioned on **Discussion Forum for PX4, Pixhawk, QGroundControl, MAVSDK, MAVLink**. There might be relevant details there:\n\nhttps://discuss.px4.io/t/px4-v1-15-public-changes-what-needs-docs/39850/1\n",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": [
        {
          "author": "bresch",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Navigator: Resume mission with last flight speed",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21714",
    "number": 21714,
    "created_at": "2023-06-12T16:34:18Z",
    "merged": true,
    "merged_at": "2023-08-08T11:22:05Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "Based on https://github.com/PX4/PX4-Autopilot/pull/21710\r\n\r\n### Solved Problem\r\nOn resuming a mission, the flight speed was reset to the vehicle default. Especially for surveys this is not acceptable. \r\n\r\n### Solution\r\nFurther extend the ideas from https://github.com/PX4/PX4-Autopilot/pull/21710: some mission items contain not momentary setpoints (like go to point A), but instead contain settings that are then relevant for the whole mission (or until over-turned by a negating command). \r\nDO_CHANGE_SPEED items belong to the same category as eg camera settings: you want to re-apply them when resuming a mission. \r\n\r\nI've further removed the separated mc/fw stored flight speeds, as it's only ever needed to store the speed of the current mode we're in, and we reset it during VTOL transitions. \r\n\r\n### Changelog Entry\r\n\r\n```\r\nFeature: Resume mission with flight speed from previous mission items\r\nDocumentation: Need to clarify page ...\r\n```\r\n\r\n### Alternatives\r\n\r\n\r\n",
      "issue_comments": [
        {
          "author": "DronecodeBot",
          "created_at": "2023-06-14T09:43:32Z",
          "body": "This pull request has been mentioned on **Discussion Forum for PX4, Pixhawk, QGroundControl, MAVSDK, MAVLink**. There might be relevant details there:\n\nhttps://discuss.px4.io/t/set-mission-speed-being-ignored-upon-starting-auto-flight/32705/2\n",
          "type": "issue_comment"
        },
        {
          "author": "tstastny",
          "created_at": "2023-06-23T12:20:00Z",
          "body": "will likely need this in before the beaglebone is passing https://github.com/PX4/PX4-Autopilot/pull/21749",
          "type": "issue_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2023-07-17T13:57:40Z",
          "body": "[Removed some speed handling logic from Navigator,](https://github.com/PX4/PX4-Autopilot/pull/21714/commits/0b18bd59a46268574460aa9b60f0e13cea5aa36e) and then rebased and force pushed. @tstastny would be good if you could make yourself a picture here and comment if you agree with the general direction of it (removing speed logic from Navigator). ",
          "type": "issue_comment"
        },
        {
          "author": "hamishwillee",
          "created_at": "2023-08-09T04:56:52Z",
          "body": "I think it is an excellent feature to start from the previous setpoint. Can you update the docs @sfuhrer ? \r\n\r\nI was thinking perhaps a very short section on pausing and resuming the mission in https://docs.px4.io/main/en/flight_modes/mission.html#mission-mode. Make it clear this applies to all frames.",
          "type": "issue_comment"
        }
      ],
      "review_comments": [
        {
          "author": "tstastny",
          "created_at": "2023-06-23T12:09:34Z",
          "body": "if this is just about speed commands, shouldnt we just look here for the exact NAV_CMD corresponding to a DO_CHANGE_SPEED?\r\n\r\nAlso - why are we sending the command again instead of just applying the properties? (sorry im a bit out of the loop on all this)",
          "path": "src/modules/navigator/mission.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "tstastny",
          "created_at": "2023-06-23T12:10:23Z",
          "body": "i dont really care either way - but what's the reason for keeping these lines at all if they are commented out?",
          "path": "src/modules/navigator/navigator.h",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "tstastny",
          "created_at": "2023-06-23T12:18:45Z",
          "body": "so this one\r\n1. updates to the latest potential speed change ONLY by the mission item iteration\r\n2. and then sends the vehicle command such that\r\n3. `cruising_speed_sp_update()` picks up that command when it checks for do set speed commands? (where it would also pick up any operator freeform do set speed commands?)\r\n",
          "path": "src/modules/navigator/mission.cpp",
          "position": 14,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2023-06-23T14:48:54Z",
          "body": "No reason, those are left overs from debugging, will remove!",
          "path": "src/modules/navigator/navigator.h",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2023-06-23T14:58:44Z",
          "body": "> if this is just about speed commands, shouldnt we just look here for the exact NAV_CMD corresponding to a DO_CHANGE_SPEED?\r\n\r\ngood point, changed it to do so.",
          "path": "src/modules/navigator/mission.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2023-06-23T15:22:42Z",
          "body": ">ONLY by the mission item iteration\r\nCan you expand what you mean?\r\n\r\nBut yes otherwise that's what happens. Note that also the fixed-wing position controller and the multicopter flight mode manager listen to VEHICLE_CMD_DO_CHANGE_SPEED and execute it independently of `cruising_speed_sp_update()` (which is only run in Mission, but not in eg Loiter). \r\n",
          "path": "src/modules/navigator/mission.cpp",
          "position": 14,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2023-06-23T15:26:28Z",
          "body": "Maybe we could even remove `cruising_speed_sp_update()`? It's a fundamental question if the speed setpoint should be part of the position setpoint or if it's rather an independent system setting.",
          "path": "src/modules/navigator/mission.cpp",
          "position": 14,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2023-07-17T13:52:17Z",
          "body": "Removed it in https://github.com/PX4/PX4-Autopilot/pull/21714/commits/0b18bd59a46268574460aa9b60f0e13cea5aa36e. I feel like we should rather de-couple path handling (through the position setpoints) and speed setpoints (independent of the path) for now.",
          "path": "src/modules/navigator/mission.cpp",
          "position": 14,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2023-07-17T13:54:29Z",
          "body": ">Also - why are we sending the command again instead of just applying the properties? (sorry im a bit out of the loop on all this)\r\n\r\nBecause the speed setpoint is handled by the Navigator but by the Position controllers (FW Pos and MPC). See https://github.com/PX4/PX4-Autopilot/pull/19407. So Navigator has to re-publish the command, and the position controllers can take it up and execute the change.\r\n",
          "path": "src/modules/navigator/mission.cpp",
          "position": 1,
          "type": "review_comment"
        }
      ],
      "reviews": [
        {
          "author": "tstastny",
          "created_at": "",
          "body": "I left some questions, just because navigator is quite nebulous to me. But otherwise great that we are reducing complexity where possible.",
          "state": "DISMISSED",
          "type": "review"
        },
        {
          "author": "sfuhrer",
          "created_at": "",
          "body": "Addressed two of your comments with new commits @tstastny ",
          "state": "COMMENTED",
          "type": "review"
        },
        {
          "author": "RomanBapst",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        },
        {
          "author": "tstastny",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Navigator Mission: Improve mission resume",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21710",
    "number": 21710,
    "created_at": "2023-06-09T15:07:09Z",
    "merged": true,
    "merged_at": "2023-06-20T12:38:04Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "Replaces https://github.com/PX4/PX4-Autopilot/pull/21643. I've tried to clean up the logic a bit and make it less entangled.\r\n\r\n### Solved Problem\r\nSurvey mission contain, beside the position items, contain items for gimbal config, camera mode config, and camera trigger. When the execution of a mission is stopped, we want also to stop the camera from taking pictures and move the gimbal back to neutral. Upon resuming the mission though, we have to re-configure gimbal and camera and start the triggering once back on the mission path.\r\n\r\n### Solution\r\nStore (cache) all gimbal/camera/trigger mission items and replay them on resuming the mission. In detail:\r\n- `on_inactivation() `store the currently active index as `_inactivation_index`\r\n- `on_activation()`, store all gimbal/camera/trigger items up to the currently active index and reset the mission to the previous. Also set flag (`_align_heading_necessary`) that a yaw alignment is required upon reaching this waypoint (we want to only start triggering once yaw is correctly aligned with next WP).\r\n- `on_active()`\r\n  - if `_align_heading_necessary` is set and mission item is reached, update current item with yaw field and force it to accept that one before starting the trigger.\r\n  - read the gimbal and camera mode command items from cache, thus making the gimbal move to the right orientation and setting the right camera mode\r\n  - read the trigger commands once the previous waypoint incl. yaw alignment is accepted\r\n\r\nFurther:\r\n- reset cached items if mission is updated\r\n- reset mission on disarmed only if we reached the last mission item, otherwise keep\r\n\r\n### Changelog Entry\r\nFor release notes:\r\n```\r\nFeature: Improve mission resume (e.g. replay gimbal and camera commands of a survey)\r\nDocumentation: Need to clarify page\r\n```\r\n\r\n### Alternatives\r\nIt would be nice to not resume the mission from the previous mission item but from the actual lat/lon position where the mission was interrupted. \r\n\r\n### Test coverage\r\nSITL tested.\r\n\r\n\r\n\r\n",
      "issue_comments": [
        {
          "author": "RomanBapst",
          "created_at": "2023-06-16T06:35:14Z",
          "body": "@sfuhrer LGTM. I hard a hard time understanding how the mission item is set when resuming the survey without calling `set_mission_items` but then I realized that `set_current_mission_index` does it under the hood :-p",
          "type": "issue_comment"
        },
        {
          "author": "RomanBapst",
          "created_at": "2023-06-18T16:46:37Z",
          "body": "@sfuhrer Flash overflow :-(",
          "type": "issue_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2023-06-19T09:11:53Z",
          "body": "> @sfuhrer Flash overflow :-(\r\n\r\nv4_test indeed is at 100.00%..in an effort to bring it slightly down I've removed some rather unnecessary params and made some other param descriptions more compact, let's see if that's enough. ",
          "type": "issue_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2023-06-19T10:05:39Z",
          "body": "> > @sfuhrer Flash overflow :-(\r\n> \r\n> v4_test indeed is at 100.00%..in an effort to bring it slightly down I've removed some rather unnecessary params and made some other param descriptions more compact, let's see if that's enough.\r\n\r\nThat wasn't enough. I've proposed to remove the gyro FFT instead: https://github.com/PX4/PX4-Autopilot/pull/20811",
          "type": "issue_comment"
        }
      ],
      "review_comments": [
        {
          "author": "RomanBapst",
          "created_at": "2023-06-16T06:22:23Z",
          "body": "```suggestion\r\n\t\t// add yaw alignment requirement on the current mission item\r\n```",
          "path": "src/modules/navigator/mission.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "RomanBapst",
          "created_at": "2023-06-16T06:29:45Z",
          "body": "@sfuhrer Can you make a comment why this is necessary here?",
          "path": "src/modules/navigator/mission.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "RomanBapst",
          "created_at": "2023-06-16T06:31:17Z",
          "body": "@sfuhrer Can these functions be made const?",
          "path": "src/modules/navigator/mission.h",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "RomanBapst",
          "created_at": "2023-06-16T06:32:02Z",
          "body": "```suggestion\r\n\tint _inactivation_index{-1}; // index of mission item at which the mission was paused. Used to resume survey missions at previous waypoint to not lose images.\r\n```",
          "path": "src/modules/navigator/mission.h",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "RomanBapst",
          "created_at": "2023-06-16T06:41:08Z",
          "body": "@sfuhrer I am trying to think about a stupid corner case. What if the user sets the current mission index to the resume index manually while the vehicle is paused. Then he engages RTL and cancels RTL. Then he resumes the mission.\r\nThe `_mission_item` would have been overriden by RTL (shared item) and `_current_mission_index` would be equal to `resume_index`in which case `set_current_mission_index` does an early return. Is that a potential corner case where the mission would fly to the RTL item?",
          "path": "src/modules/navigator/mission.cpp",
          "position": 50,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2023-06-16T09:43:34Z",
          "body": "Well I was actually wanting to ask you the exact same question :sweat_smile: . I actually don't see where it comes from. Reverse mission is only something that's supported in RTL, no? And there we don't care about mission resume camera logic..\r\nRemove it?",
          "path": "src/modules/navigator/mission.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2023-06-16T09:57:26Z",
          "body": "certainly, done",
          "path": "src/modules/navigator/mission.h",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2023-06-16T10:05:12Z",
          "body": "removed it.",
          "path": "src/modules/navigator/mission.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2023-06-16T10:20:19Z",
          "body": "Yes you're right, but it seems that this behavior is already like that without this PR.",
          "path": "src/modules/navigator/mission.cpp",
          "position": 50,
          "type": "review_comment"
        }
      ],
      "reviews": [
        {
          "author": "RomanBapst",
          "created_at": "",
          "body": "Added comments in the code",
          "state": "CHANGES_REQUESTED",
          "type": "review"
        },
        {
          "author": "RomanBapst",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "navigator: send commands to anyone listening",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21697",
    "number": 21697,
    "created_at": "2023-06-07T14:56:50Z",
    "merged": true,
    "merged_at": "2023-06-12T07:41:28Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "### Solved Problem\r\n POI commands that are part of a mission do not work when the gimbal is controlled by a companion computer. \r\n\r\n### Solution\r\nSend commands to anyone listening. \r\n\r\n### Test coverage\r\nWe have been flying with that change for some years now.\r\n\r\n\r\n",
      "issue_comments": [
        {
          "author": "sfuhrer",
          "created_at": "2023-06-07T15:00:10Z",
          "body": "@bkueng @ThomasDebrunner you were looking into this before - do you think this change is needed?",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": [
        {
          "author": "bkueng",
          "created_at": "",
          "body": "I don't remember exactly but I think it's still needed.",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "(Mission) FeasibilityChecker: remove duplicate line",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21689",
    "number": 21689,
    "created_at": "2023-06-06T12:53:56Z",
    "merged": true,
    "merged_at": "2023-07-04T09:17:24Z",
    "state": "closed",
    "conversation": {
      "author": "tstastny",
      "body": "<!--\r\n\r\nThank you for your contribution!\r\n\r\nGet early feedback through\r\n- Dronecode Discord: https://discord.gg/dronecode\r\n- PX4 Discuss: http://discuss.px4.io/\r\n- opening a draft pr and sharing the link\r\n\r\n-->\r\n\r\n### Solved Problem\r\nI was poking around code and saw this duplicated line.\r\n\r\n### Solution\r\nremoved it\r\n\r\n### Changelog Entry\r\nN/A\r\n",
      "issue_comments": [
        {
          "author": "mrpollo",
          "created_at": "2023-06-28T17:53:36Z",
          "body": "Thanks @tstastny ",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": [
        {
          "author": "mcsauder",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Port VTOL mission item resets and QC rework",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21665",
    "number": 21665,
    "created_at": "2023-05-31T17:45:54Z",
    "merged": true,
    "merged_at": "2023-06-02T08:22:34Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "Port of https://github.com/PX4/PX4-Autopilot/pull/21641 and https://github.com/PX4/PX4-Autopilot/pull/21598 to 1.14",
      "issue_comments": [],
      "review_comments": [],
      "reviews": [
        {
          "author": "RomanBapst",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Adsb warnings fixes",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21663",
    "number": 21663,
    "created_at": "2023-05-31T12:39:32Z",
    "merged": true,
    "merged_at": "2024-04-22T08:14:39Z",
    "state": "closed",
    "conversation": {
      "author": "asimopunov",
      "body": "- warn about full traffic conflict buffer at 1/60hz.\r\n- add conflict expiry for buffer.\r\n- use only events for buffer full warning. mavlink_log_critical no longer needed.\r\n- use icao address for conflict warnings id, stop using uas_id. UTM_GLOBAL_POSITION assumed deprecated.\r\n- remove mavlink_log_critical warnings. Replaced with events.\r\n- stop spamming when buffer is full. log using px4_info and px4_warn for ulog since events don't show up on flight review or plotjuggler.\r\n- fix warning wording if buffer is full.\r\n- fix missing {1}, {2} etc. from events\r\n\r\n\r\nfollow up on https://github.com/PX4/PX4-Autopilot/pull/21283",
      "issue_comments": [
        {
          "author": "asimopunov",
          "created_at": "2023-09-29T01:05:33Z",
          "body": "@dakejahl Could you please fetch the adsb changes over to your next release? I was asked about this by Will. ",
          "type": "issue_comment"
        },
        {
          "author": "asimopunov",
          "created_at": "2024-04-11T20:13:24Z",
          "body": "> The CI failure happens on main already, but would be a good opportunity to quickly have a look.\r\n\r\n@bkueng hmm\r\nthey pass locally when I run `make tests TESTFILTER=functional-AdsbConflict`\r\nThe build step also passed when the tests were merged here - https://github.com/PX4/PX4-Autopilot/actions/runs/4431457384/job/12034874013\r\n\r\nMaybe it's unrelated - need to look more\r\n\r\nDoes that work-queue error directly point to anything for you?\r\n\r\n```\r\n[1277/1278] Running tests\r\n   Site: c36612c519c7\r\n   Build name: Linux-c++\r\nCreate new tag: 20240411-1954 - Experimental\r\nTest project /__w/PX4-Autopilot/PX4-Autopilot/build/px4_sitl_test\r\n        Start   1: functional-AdsbConflict\r\n  1/140 Test   #1: functional-AdsbConflict ..............................***Failed    0.01 sec\r\nERROR [px4_work_queue] not running\r\nERROR [px4_work_queue] wq:lp_default not available\r\nERROR [px4_work_queue] init failed\r\n[==========] Running 3 tests from 1 test suite.\r\n[----------] Global test environment set-up.\r\n[----------] 3 tests from AdsbConflictTest\r\n[ RUN      ] AdsbConflictTest.detectTrafficConflict\r\n```",
          "type": "issue_comment"
        },
        {
          "author": "asimopunov",
          "created_at": "2024-04-17T14:46:03Z",
          "body": "> The following tests FAILED:\r\n> \t  1 - functional-AdsbConflict (Failed)\r\n\r\n@bkueng It's passing now",
          "type": "issue_comment"
        }
      ],
      "review_comments": [
        {
          "author": "bkueng",
          "created_at": "2024-04-11T06:40:25Z",
          "body": "This removes it but then accesses it in the next lines.\r\nWhy not directly remove them without the extra `expired_conflicts`?",
          "path": "src/lib/adsb/AdsbConflict.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2024-04-11T06:41:48Z",
          "body": "they're displayed now in flight review",
          "path": "src/lib/adsb/AdsbConflict.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2024-04-11T06:42:56Z",
          "body": "`events::send(events::ID(\"buffer_full\"), events::Log::Notice, \"Too much traffic! Showing all messages from now on\");` (remove the space)",
          "path": "src/lib/adsb/AdsbConflict.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2024-04-11T06:45:47Z",
          "body": "The `@description` above contains the details. If you want to add them here as well, please make it more readable. hdg -> heading",
          "path": "src/lib/adsb/AdsbConflict.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2024-04-11T06:46:10Z",
          "body": "Same here and below",
          "path": "src/lib/adsb/AdsbConflict.cpp",
          "position": 199,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2024-04-11T06:46:49Z",
          "body": "Can you remove this?",
          "path": "src/lib/adsb/AdsbConflict.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2024-04-11T06:47:21Z",
          "body": "It is 120",
          "path": "src/lib/adsb/AdsbConflict.h",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "asimopunov",
          "created_at": "2024-04-11T19:33:24Z",
          "body": "Thanks, doesn't look like there was a good reason.\r\nfixed",
          "path": "src/lib/adsb/AdsbConflict.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "asimopunov",
          "created_at": "2024-04-11T19:33:56Z",
          "body": "yup, better?",
          "path": "src/lib/adsb/AdsbConflict.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2024-04-17T06:15:29Z",
          "body": "After removing you must ensure the index does not increase otherwise an element is skipped.",
          "path": "src/lib/adsb/AdsbConflict.cpp",
          "position": 34,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2024-04-17T07:14:49Z",
          "body": "Yes, thanks",
          "path": "src/lib/adsb/AdsbConflict.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2024-04-18T14:10:30Z",
          "body": "Did you mean to add this?",
          "path": "src/lib/adsb/AdsbConflict.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "asimopunov",
          "created_at": "2024-04-18T16:03:49Z",
          "body": "Of course, we don't need it. I'm just being lazy so I don't need to add another time if this CI fails again. I can remove.",
          "path": "src/lib/adsb/AdsbConflict.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "asimopunov",
          "created_at": "2024-04-18T22:22:34Z",
          "body": "removed",
          "path": "src/lib/adsb/AdsbConflict.cpp",
          "position": 1,
          "type": "review_comment"
        }
      ],
      "reviews": [
        {
          "author": "bkueng",
          "created_at": "",
          "body": "The CI failure happens on main already, but would be a good opportunity to quickly have a look.\r\n```\r\nThe following tests FAILED:\r\n\t  1 - functional-AdsbConflict (Failed)\r\n```",
          "state": "COMMENTED",
          "type": "review"
        },
        {
          "author": "bkueng",
          "created_at": "",
          "body": "> Does that work-queue error directly point to anything for you?\r\n\r\nIt's probably unrelated unless the test accesses params.",
          "state": "COMMENTED",
          "type": "review"
        },
        {
          "author": "bkueng",
          "created_at": "",
          "body": ">  @bkueng It's passing now\r\n\r\nNice, thanks",
          "state": "COMMENTED",
          "type": "review"
        },
        {
          "author": "bkueng",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "[1.14 Backport] Geofence: Disable pre-emptive geofence predictor by default",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21657",
    "number": 21657,
    "created_at": "2023-05-30T16:19:33Z",
    "merged": true,
    "merged_at": "2023-06-06T15:22:48Z",
    "state": "closed",
    "conversation": {
      "author": "junwoo091400",
      "body": "## About\r\nAs discussed in\r\nhttps://discuss.px4.io/t/px4-maintainers-call-may-30-2023/32372#v114-new-beta-release-5, Geofence predictor feature was not well tested / maintained, hence was agreed upon to be disabled for the 1.14 release\r\n\r\nThis is a backport because 1.14 has been branched out, but not going to `main` branch yet, since we haven't discussed what to do for the next release.",
      "issue_comments": [
        {
          "author": "DronecodeBot",
          "created_at": "2023-05-30T16:20:22Z",
          "body": "This pull request has been mentioned on **Discussion Forum for PX4, Pixhawk, QGroundControl, MAVSDK, MAVLink**. There might be relevant details there:\n\nhttps://discuss.px4.io/t/px4-maintainers-call-may-30-2023/32372/1\n",
          "type": "issue_comment"
        },
        {
          "author": "DronecodeBot",
          "created_at": "2023-06-06T15:36:05Z",
          "body": "This pull request has been mentioned on **Discussion Forum for PX4, Pixhawk, QGroundControl, MAVSDK, MAVLink**. There might be relevant details there:\n\nhttps://discuss.px4.io/t/px4-maintainers-call-june-06-2023/32473/1\n",
          "type": "issue_comment"
        },
        {
          "author": "hamishwillee",
          "created_at": "2023-07-20T00:03:30Z",
          "body": "Should this also be disabled by default in main?",
          "type": "issue_comment"
        },
        {
          "author": "junwoo091400",
          "created_at": "2023-07-23T20:54:07Z",
          "body": "> Should this also be disabled by default in main?\r\n\r\nThanks for the reminder, it should! Hence I created a branch against the `main`. Thanks!",
          "type": "issue_comment"
        }
      ],
      "review_comments": [
        {
          "author": "junwoo091400",
          "created_at": "2023-05-31T15:59:44Z",
          "body": "I've added the note, what do you think? @bresch @dagar ",
          "path": "src/modules/navigator/geofence_params.c",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "hamishwillee",
          "created_at": "2023-05-31T23:18:57Z",
          "body": "Certainly better than nothing. It is unfortunate that the parameter tables are rendered as HTML tables so we can't use markdown formatting.\r\n\r\nPerhaps something for 1.15 (as per [the discussion on feature support here](https://discuss.px4.io/t/px4-maintainers-call-may-30-2023/32372#fire-v115-next-release-improvement-discussion-8)) but perhaps we could add an `@experimental` tag in the parameter names to make it clear that the feature is experimental? (probably not, since a whole feature is experimental, not a particular parameter).\r\n\r\n```suggestion\r\n * [EXPERIMENTAL] Use Pre-emptive geofence triggering\r\n *\r\n * WARNING: This experimental feature may cause flyaways. Use at your own risk.\r\n```",
          "path": "src/modules/navigator/geofence_params.c",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "junwoo091400",
          "created_at": "2023-06-06T12:24:52Z",
          "body": "> Perhaps something for 1.15 (as per [the discussion on feature support here](https://discuss.px4.io/t/px4-maintainers-call-may-30-2023/32372#fire-v115-next-release-improvement-discussion-8)) but perhaps we could add an `@experimental` tag in the parameter names to make it clear that the feature is experimental?\r\n\r\nI think that could be nice, if we have mechanism in QGC to prompt \"WARNING! This feature is experimental!\" to make sure user gets notified the fact that it's experimental properly.\r\n\r\nOtherwise, I think you are probably thinking of documentation aspect of it as well, for displaying parameters with those tags with special colors perhaps?\r\n\r\nBtw, displaying markdown formatting in HTML is possible, for example like this: https://www.makeuseof.com/md-block-render-markdown-web-page/",
          "path": "src/modules/navigator/geofence_params.c",
          "position": 1,
          "type": "review_comment"
        }
      ],
      "reviews": [
        {
          "author": "bresch",
          "created_at": "",
          "body": "Should we add a note in the param that this is an experimental feature?\r\nOr what's the point of letting someone enabling it if we know that it can lead to a fly-away?",
          "state": "COMMENTED",
          "type": "review"
        },
        {
          "author": "dagar",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "navigator: improve survey resume",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21643",
    "number": 21643,
    "created_at": "2023-05-26T14:04:18Z",
    "merged": false,
    "merged_at": null,
    "state": "closed",
    "conversation": {
      "author": "Igor-Misic",
      "body": null,
      "issue_comments": [
        {
          "author": "Igor-Misic",
          "created_at": "2023-06-18T16:25:19Z",
          "body": "continued here: https://github.com/PX4/PX4-Autopilot/pull/21710 ",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": []
    }
  },
  {
    "title": "Navigator: make sure to reset mission.item fields touched by set_vtol_transition_item",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21641",
    "number": 21641,
    "created_at": "2023-05-26T12:10:22Z",
    "merged": true,
    "merged_at": "2023-06-02T08:21:23Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "`\r\nmission_block::set_vtol_transition_item` sets the params of the mission item directly to values that make sense for NAV_CMD_DO_VTOL_TRANSITION, but don't for other NAV_CMDs. So make sure that whenever we use it, we then in the next step reset the touched mission_item fields.\r\n\r\n### Solved Problem\r\nacceptance radius and/or time_inside fields of mision_item can be wrong after a VTOL transition. \r\n\r\n### Solution\r\nMake sure to at least always fill the fields touched by set_vtol_transition_item, which are fields 0 (another union with eg time_inside), and acceptance_radius. \r\n\r\n### Alternatives\r\nChange the way of how `set_vtol_transition_item` works? Does it have to manually adapt the fields of _mission_item?\r\n\r\n### Test coverage\r\nSome SITL testing. \r\n\r\n",
      "issue_comments": [
        {
          "author": "sfuhrer",
          "created_at": "2023-05-31T17:42:02Z",
          "body": "Flight tested on multiple VTOLs, LGTM.",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": [
        {
          "author": "RomanBapst",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Fix incorrect _rtl_alt if RTL_TYPE param is RTL_TYPE_MISSION_LANDING_…",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21620",
    "number": 21620,
    "created_at": "2023-05-20T20:05:36Z",
    "merged": false,
    "merged_at": null,
    "state": "closed",
    "conversation": {
      "author": "s-lisovenko",
      "body": "<!--\r\n\r\nThank you for your contribution!\r\n\r\nGet early feedback through\r\n- Dronecode Discord: https://discord.gg/dronecode\r\n- PX4 Discuss: http://discuss.px4.io/\r\n- opening a draft pr and sharing the link\r\n\r\n-->\r\n\r\n### Solved Problem\r\nPrevent aircraft crashing during return home mode if RTL_TYPE is 2 (RTL_TYPE_MISSION_LANDING_REVERSED)\r\nWhen RTL_TYPE==2 the **find_RTL_destination** function returns before **_rtl_alt** is calculated. Thus **_rtl_alt** == 0 which causes the aircraft to immediately descend during the activation of the return home and as a consequence of its crash.\r\n\r\n### Solution\r\nCalculate **_rtl_alt** before return from function\r\n\r\n",
      "issue_comments": [
        {
          "author": "sfuhrer",
          "created_at": "2023-09-18T15:09:26Z",
          "body": "@KonradRudin I guess this is something you also fix through https://github.com/PX4/PX4-Autopilot/pull/20903? ",
          "type": "issue_comment"
        },
        {
          "author": "KonradRudin",
          "created_at": "2023-09-18T18:02:23Z",
          "body": "@sfuhrer, yes this should not happen anymore in the mentioned PR",
          "type": "issue_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2023-09-19T08:34:36Z",
          "body": "@s-lisovenko would you be able to test https://github.com/PX4/PX4-Autopilot/pull/20903 and check if it indeed acts the same as you indented here? And then close this PR? Thanks!",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": []
    }
  },
  {
    "title": "Navigator: MissionFeasibilityCheck: check if items fit to the current vehicle type",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21602",
    "number": 21602,
    "created_at": "2023-05-17T13:56:51Z",
    "merged": true,
    "merged_at": "2023-05-31T17:27:27Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "### Solved Problem\r\nWhen switching between different vehicle types on the same groundstation, it can happen that by accident a mission that was planned for example for a VTOL gets uploaded to a Multicopter. This is can lead to undesired/unexpected behavior.\r\n\r\n### Solution\r\nAdd `checkItemsFitToVehicleType()` check that checks if the vehicle type is non-VTOL but there are VTOL mission items (VTOL_TAKEOFF, VTOL_LAND, VTOL_TRANSITION). The check can later be extended to handle all kind of vehicle type vs mission item checks.\r\n\r\n### Changelog Entry\r\nFor release notes:\r\n```\r\nFeature: Mission Feasibility Check: prevent uploading a mission containing VTOL items to non-VTOL vehicles\r\n```\r\n\r\n",
      "issue_comments": [],
      "review_comments": [],
      "reviews": [
        {
          "author": "RomanBapst",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Refactoring dataman to remove locking mechanisms and to use uORB",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21594",
    "number": 21594,
    "created_at": "2023-05-15T14:58:49Z",
    "merged": true,
    "merged_at": "2023-07-24T11:10:32Z",
    "state": "closed",
    "conversation": {
      "author": "Igor-Misic",
      "body": "Changes brought by this PR:\r\n\r\n-  Refactored the initialization process of the Dataman file.\r\n-  Removed the thread-locking mechanism from the Dataman thread.\r\n-  Added two new classes, DatamanClient and DatmanCache, which facilitate communication with Dataman using uORB messages.\r\n- Removed the locking mechanism for Dataman itself\r\n\r\n**Refactored Initialization of the Dataman File**\r\nThis fix addresses the issue outlined in the following link: https://github.com/PX4/PX4-Autopilot/issues/21278.\r\nNow, if the file doesn't exist or contains an incorrect compact key, it will be cleared, and default values will be set.\r\n\r\n**DatamanClient**\r\nIntroduces a new method of communicating with the Dataman thread. Previously, direct access to the Dataman module was used, where requests were inserted into the queue with a semaphore. This approach has now been replaced with the uORB messaging system.\r\n\r\nDatamanClient introduces both **synchronous** and **asynchronous** modes of communication with Dataman.\r\n\r\n**DatamanCache**\r\nThis class serves as a cache storage for a defined amount of Dataman items. Currently, the cache does not employ any advanced caching algorithms.\r\n\r\n**Integration within mission**\r\nThe mission now incorporates a simple caching mechanism that attempts to cache the next N items whenever the \"current item\" is modified. \r\nIn order to eliminate the need for a locking mechanism within the mission, logic has been implemented to check if the set of mission items has been updated in the Dataman. The write operation to DM_KEY_MISSION_STATE has been removed from the mavlink thread, and instead, the existing uORB (mission.msg) message is utilized.\r\n\r\n **Integration geofence and safe points**\r\nAs the information on new geofence and safe points is updated at the end, it is safe to utilize it without the need for a lock. Integration has been implemented to store all geofence and safe point items within the cache and update them whenever changes occur.\r\n\r\n**Overview of the new architecture**\r\n![image](https://github.com/PX4/PX4-Autopilot/assets/10188706/8fdcda1c-c64f-4e28-b03b-c52f6330c162)\r\n\r\n**Stack is increased as it was needed**\r\n![image](https://github.com/PX4/PX4-Autopilot/assets/10188706/65dd9daf-7440-4f1d-ac18-cdf2e7e1bc5e)\r\n",
      "issue_comments": [
        {
          "author": "julianoes",
          "created_at": "2023-05-30T05:14:29Z",
          "body": "Nice, this looks amazing @Igor-Misic!",
          "type": "issue_comment"
        },
        {
          "author": "dagar",
          "created_at": "2023-06-16T15:01:19Z",
          "body": "There's a failure on the test rack that looks real. http://px4-jenkins.dagar.ca:8080/blue/organizations/jenkins/PX4-Autopilot/detail/pr-dataman_refactoring/21/pipeline/125\r\n\r\n![Screenshot from 2023-06-16 11-00-08](https://github.com/PX4/PX4-Autopilot/assets/84712/9de49fed-20e3-4cd7-9283-eb26d61045d4)\r\n",
          "type": "issue_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2023-06-19T09:59:22Z",
          "body": "> There's a failure on the test rack that looks real. http://px4-jenkins.dagar.ca:8080/blue/organizations/jenkins/PX4-Autopilot/detail/pr-dataman_refactoring/21/pipeline/125\r\n\r\nI didn't reproduce locally, but I think I fixed it in the last commit.",
          "type": "issue_comment"
        },
        {
          "author": "tstastny",
          "created_at": "2023-06-19T12:01:53Z",
          "body": "looks like only remaining build failure is 0.01% flash on diatone mamba",
          "type": "issue_comment"
        },
        {
          "author": "tstastny",
          "created_at": "2023-06-21T11:57:18Z",
          "body": "@dagar - what do you think? gtg?",
          "type": "issue_comment"
        },
        {
          "author": "dagar",
          "created_at": "2023-06-21T17:51:35Z",
          "body": " - DM_KEY_MISSION_STATE is obsolete and can be purged, we don't need to save the progress to the SD card\r\n - publishing ORB_ID(mission) is used to signal navigation mission to update and rerun mission feasibility, but now it's also updating with any geofence or safe point changes \r\n - DatamanClient is using the old uORB API where a subscription is a file descriptor, we need to check that the extra FD usage doesn't trigger the warning (or change to uORB::SubscriptionBlocking, etc)",
          "type": "issue_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2023-06-22T06:13:35Z",
          "body": "> DM_KEY_MISSION_STATE is obsolete and can be purged, we don't need to save the progress to the SD card\r\n\r\nResuming a mission on battery change isn't a thing? Either way is fine with me but it's a functional change we can do as a separate PR.\r\n\r\n> publishing ORB_ID(mission) is used to signal navigation mission to update and rerun mission feasibility, but now it's also updating with any geofence or safe point changes\r\n\r\nI didn't think this is a problem. If you're concerned I can make it more granular.\r\n\r\n> DatamanClient is using the old uORB API where a subscription is a file descriptor, we need to check that the extra FD usage doesn't trigger the warning (or change to uORB::SubscriptionBlocking, etc)\r\n\r\nI did not see any.",
          "type": "issue_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2023-06-22T11:33:36Z",
          "body": ">  publishing ORB_ID(mission) is used to signal navigation mission to update and rerun mission feasibility, but now it's also updating with any geofence or safe point changes\r\n\r\nI didn't consider the reporting happening multiple times. I fixed it.",
          "type": "issue_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2023-07-03T09:07:52Z",
          "body": "@dagar good to go?",
          "type": "issue_comment"
        },
        {
          "author": "tstastny",
          "created_at": "2023-07-20T06:03:14Z",
          "body": "@bkueng looks like it needs one more rebase.\r\n\r\n@dagar any last words? this one has been blocking some things for quite a while now",
          "type": "issue_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2023-07-24T11:10:22Z",
          "body": "@dagar I'm getting this in as a few things are blocking on this. I'll do a follow-up, if there's anything else needed.",
          "type": "issue_comment"
        },
        {
          "author": "DronecodeBot",
          "created_at": "2023-09-15T11:33:28Z",
          "body": "This pull request has been mentioned on **Discussion Forum for PX4, Pixhawk, QGroundControl, MAVSDK, MAVLink**. There might be relevant details there:\n\nhttps://discuss.px4.io/t/how-to-start-developing/34131/4\n",
          "type": "issue_comment"
        }
      ],
      "review_comments": [
        {
          "author": "dagar",
          "created_at": "2023-06-16T14:16:47Z",
          "body": "Why?",
          "path": ".ci/Jenkinsfile-hardware",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2023-06-19T10:00:06Z",
          "body": "Igor explained it in the commit: https://github.com/PX4/PX4-Autopilot/pull/21594/commits/50f23de177e338623b0e473a6c9add9a6113e89e.\r\n\r\nI made it a bit more explicit in https://github.com/PX4/PX4-Autopilot/pull/21594/commits/b0c918fc42a4a10043dd14fe280e6a96dcbfb32c",
          "path": ".ci/Jenkinsfile-hardware",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2023-06-21T17:43:24Z",
          "body": "Why? \r\nDM_KEY_MISSION_STATE and ORB_ID(mission) are the same thing, mavlink_mission would have published `mission` and written DM_KEY_MISSION_STATE back to back. I think it's time to kill DM_KEY_MISSION_STATE and remove some of the confusion.",
          "path": "src/modules/navigator/mission.cpp",
          "position": 128,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2023-06-21T21:01:27Z",
          "body": "Let's try to keep this one.\r\n\r\n```suggestion\r\n```",
          "path": "boards/px4/fmu-v4/test.px4board",
          "position": 1,
          "type": "review_comment"
        }
      ],
      "reviews": [
        {
          "author": "bkueng",
          "created_at": "",
          "body": "Nice work @Igor-Misic! I went through it, tested quite a bit, and fixed some things.\r\n\r\nRAM usage increases a bit (depending on geofence/safe point usage ~2KB).\r\n\r\nNavigator does not block anymore during a mission execution (unless DO_JUMP is used). This is in sih with geofence and safe points:\r\n```\r\nPR:\r\nnavigator: 2337 events, 121802us elapsed, 52.12us avg, min 21us max 803us 650.441us rms\r\nmain:\r\nnavigator: 2539 events, 919572us elapsed, 362.18us avg, min 19us max 26094us 3136.414us rms\r\n```",
          "state": "DISMISSED",
          "type": "review"
        },
        {
          "author": "tstastny",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Navigator: set cruise_speed to default on entering new mode",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21503",
    "number": 21503,
    "created_at": "2023-04-21T15:24:37Z",
    "merged": true,
    "merged_at": "2023-05-05T13:53:17Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "Follow up on https://github.com/PX4/PX4-Autopilot/pull/21414.\r\n\r\nThe resets in the modes (eg Loiter mode) are not active yet, so manually set rep->current.cruising_speed = -1.f if not already in the same flight mode.\r\n\r\n\r\n### Test coverage\r\nSITL and flight tested on VTOLs.\r\n\r\n\r\n",
      "issue_comments": [
        {
          "author": "sfuhrer",
          "created_at": "2023-05-05T12:38:16Z",
          "body": "@RomanBapst this is needed because the [Navigator sets the the speed setpoint of the current position_setpoint based on the currently set cruising speed](https://github.com/PX4/PX4-Autopilot/blob/40324b03f4acc8eb49423b4e12b585a0cabfd713/src/modules/navigator/navigator_main.cpp#L285) before the [stored cruising speed is reset by the mode. ](https://github.com/PX4/PX4-Autopilot/blob/40324b03f4acc8eb49423b4e12b585a0cabfd713/src/modules/navigator/loiter.cpp#L68)\r\nSee the printfs when I change the speed in a mission and then switch into Hold mode:\r\n```\r\nget_cruising_speed(): 20.000000\r\nrest cruising speed\r\n```\r\n",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": [
        {
          "author": "RomanBapst",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "mission: only run update_mission() if mission is updated, not when reset due to landing",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21492",
    "number": 21492,
    "created_at": "2023-04-19T08:56:56Z",
    "merged": true,
    "merged_at": "2023-04-21T05:47:58Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "\r\n### Solved Problem\r\nWhen landing with a mission stored on the vehicle, that has not been updated since power cycling, these errors appear:\r\n```\r\nERROR [navigator] mission update failed\r\nWARN  [mavlink] ERROR: wp index out of bounds\r\n```\r\n\r\n### Solution\r\nThe errors come from the fact that when the mission is not updated, the [_mission_sub.copy(_mission) ](https://github.com/PX4/PX4-Autopilot/blob/202e2770da50caff0ed00c06a574e3c39933df52/src/modules/navigator/mission.cpp#L524)returns false, and thus the code below is not run, which would [reset _current_mission_index to 0 over current_seq](https://github.com/PX4/PX4-Autopilot/blob/202e2770da50caff0ed00c06a574e3c39933df52/src/modules/navigator/mission.cpp#L527), that was previously set to 0 in reset_mission. \r\nI thus here propose to only run `update_mission()` when the mission was actually updated, and otherwise, when we need to reset the mission on landing, only reset `_current_mission_index` to 0. \r\n\r\nWhat I'm not very sure yet: do we want to run the mission feasibility checks also on the reset? \r\n\r\n### Changelog Entry\r\nNot relevant.\r\n\r\n### Alternatives\r\nRemove the whole auto-reset logic on landing? It's not given that a mission should always start from 0. Though then the option in QGC should be there to reset the mission on landing/on vehicle boot.\r\n\r\n### Test coverage\r\nSITL tested. \r\n\r\n\r\n",
      "issue_comments": [
        {
          "author": "sfuhrer",
          "created_at": "2023-04-20T11:13:05Z",
          "body": "> _navigator->reset_vroi(); \r\n\r\nRight, added it.\r\n\r\n> set_current_mission_item()\r\n\r\nThat one contains partly duplicated logic that is also in reset_mission() . But I don't a reason speaking against also including it here.\r\n\r\nAdded both.",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": [
        {
          "author": "bkueng",
          "created_at": "",
          "body": "> What I'm not very sure yet: do we want to run the mission feasibility checks also on the reset?\r\n\r\nI don't think so as the reset only changes the index.\r\n\r\nBut do these need to be called too?\r\n- https://github.com/PX4/PX4-Autopilot/blob/202e2770da50caff0ed00c06a574e3c39933df52/src/modules/navigator/mission.cpp#L520\r\n- https://github.com/PX4/PX4-Autopilot/blob/202e2770da50caff0ed00c06a574e3c39933df52/src/modules/navigator/mission.cpp#L586",
          "state": "COMMENTED",
          "type": "review"
        },
        {
          "author": "bkueng",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "navigator_main: orbit in FW: get_cruising_speed()",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21484",
    "number": 21484,
    "created_at": "2023-04-17T12:28:46Z",
    "merged": true,
    "merged_at": "2023-04-18T14:01:24Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "`rep->current.cruising_speed = get_cruising_speed();` was missing on entry of a FW Orbit, thus always resetting the speed to the vehicle default. ",
      "issue_comments": [
        {
          "author": "sfuhrer",
          "created_at": "2023-04-18T11:05:56Z",
          "body": "> only concern is that it returns -1 if no cruising speed is present.. is this handled in the remainder of navigator and/or the fixed-wing controller?\r\n\r\nYes FW Pos control checks for >0 to use the cruising_speed setpoint. ",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": [
        {
          "author": "tstastny",
          "created_at": "",
          "body": "only concern is that it returns -1 if no cruising speed is present.. is this handled in the remainder of navigator and/or the fixed-wing controller?",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "RTL: fix Mission RTL vs normal RTL",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21464",
    "number": 21464,
    "created_at": "2023-04-12T09:59:43Z",
    "merged": true,
    "merged_at": "2023-04-14T07:49:48Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "Fixes by parts regressions that came in with https://github.com/PX4/PX4-Autopilot/pull/21390, and in other parts things that were still broken even before that PR.\r\nSee commits for more details. \r\n\r\n",
      "issue_comments": [
        {
          "author": "sfuhrer",
          "created_at": "2023-04-13T15:33:46Z",
          "body": "Flight tested, no more issues found, LGTM.",
          "type": "issue_comment"
        }
      ],
      "review_comments": [
        {
          "author": "sfuhrer",
          "created_at": "2023-04-12T14:36:32Z",
          "body": "I could add a comment why this class variable is necessary:\r\nOn switching into RTL, this variable is updated concerning the RTL destination type and whether the system is in fixed-wing mode at this moment.",
          "path": "src/modules/navigator/navigator.h",
          "position": 13,
          "type": "review_comment"
        }
      ],
      "reviews": [
        {
          "author": "RomanBapst",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Add NAV_CMD_DO_SET_ACTUATOR to mission commands",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21446",
    "number": 21446,
    "created_at": "2023-04-07T10:00:30Z",
    "merged": true,
    "merged_at": "2023-04-11T06:12:19Z",
    "state": "closed",
    "conversation": {
      "author": "cruise-control",
      "body": "### Solved Problem\r\nWhen  I tried to setup offboard actuator set  (with dynamic control allocation) and enable a mission item triggered/driven offboard actuator set, I found that the mission feasibility checker rejects the commands but the mission block supports them.\r\n\r\n\r\n### Solution\r\n- Add the `NAV_CMD_DO_SET_ACTUATOR` to the supported commands\r\n\r\n### Test Setup\r\n1. Setup `offboard actuator outputs` in QGC configuration page\r\n2. Create a mission with a \"Set Servo\" mission item and save it\r\n3. Manually  edit \"Set Servo\" mission item to change command to 187 (NAV_CMD_DO_SET_ACTUATOR)\r\n4. Alternatively use the development build of QGC and create \"Set Actuator\" mission item\r\n5. Upload to PX4\r\n6. Inspection of `actuator_outputs` and `vehicle_command`  uorb messages\r\n7. Using Iris Model\r\n\r\n### Test coverage\r\n- SITL\r\n  - Mission uploading working\r\n  - Mission item working\r\n- HITL\r\n  - Mission uploading working\r\n  - Mission item working\r\n\r\n",
      "issue_comments": [],
      "review_comments": [],
      "reviews": [
        {
          "author": "bkueng",
          "created_at": "",
          "body": "Thanks",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Speed reset when switching flight modes",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21414",
    "number": 21414,
    "created_at": "2023-04-03T04:56:00Z",
    "merged": true,
    "merged_at": "2023-04-27T15:32:44Z",
    "state": "closed",
    "conversation": {
      "author": "afwilkin",
      "body": "<!--\r\n\r\nThank you for your contribution!\r\n\r\nGet early feedback through\r\n- Dronecode Discord: https://discord.gg/dronecode\r\n- PX4 Discuss: http://discuss.px4.io/\r\n- opening a draft pr and sharing the link\r\n\r\n-->\r\n\r\n### Solved Problem\r\nWhen I issued a DO_CHANGE_SPEED, and then changed flight modes, that speed continued over to the new flight mode. \r\nFor example, if I issue a DO_CHANGE_SPEED in mission mode for 1 m/s, and then switch to Loiter mode, I am still restricted to 1 m/s.\r\n\r\nFrom the conversations that I have had with maintainers, this is not the behavior we want to have\r\n\r\nThe only flight mode that this **does not** happen for is RTL, which has the following line\r\n`_navigator->reset_cruising_speed();`\r\n\r\n\r\n### Solution\r\nI reset the cruising speed upon entering a new navigation mode.\r\n\r\n### Alternatives\r\nWe could also create a new module that keeps track of what mode we are in and changes speed limits from there\r\n\r\n### Test coverage\r\n- Create a waypoint mission with a change speed waypoint item at 1 m/s. Mid-mission flip to HOLD mode and issue a do_relocate. \r\nBefore the change: [log](https://review.px4.io/plot_app?log=784a1777-8dff-446c-989e-8bf3cc0210ec)\r\n![image](https://user-images.githubusercontent.com/16963678/229414814-126a9520-6e09-45c8-9e83-ca82b665525d.png)\r\n\r\nAfter the change: [log](https://review.px4.io/plot_app?log=015494ff-ad95-498b-bfd3-b59632db3525)\r\n![image](https://user-images.githubusercontent.com/16963678/229414936-f46b1814-8105-4f38-a5c5-cfbb1b980273.png)\r\n\r\n",
      "issue_comments": [
        {
          "author": "DronecodeBot",
          "created_at": "2023-04-04T15:25:41Z",
          "body": "This pull request has been mentioned on **Discussion Forum for PX4, Pixhawk, QGroundControl, MAVSDK, MAVLink**. There might be relevant details there:\n\nhttps://discuss.px4.io/t/px4-community-q-a-april-05-2023/31435/4\n",
          "type": "issue_comment"
        },
        {
          "author": "junwoo091400",
          "created_at": "2023-04-05T15:19:48Z",
          "body": "@dagar we mentioned this during the call, and concluded that more discussion on the context of this problem is needed. So it would be nice to have your feedback on use-cases for this!",
          "type": "issue_comment"
        },
        {
          "author": "DronecodeBot",
          "created_at": "2023-04-05T15:36:48Z",
          "body": "This pull request has been mentioned on **Discussion Forum for PX4, Pixhawk, QGroundControl, MAVSDK, MAVLink**. There might be relevant details there:\n\nhttps://discuss.px4.io/t/px4-community-q-a-april-05-2023/31435/1\n",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": [
        {
          "author": "sfuhrer",
          "created_at": "",
          "body": "This is good to go from my side. We've tested it a bit in SITL and real vehicles (VTOLs). Needs follow up https://github.com/PX4/PX4-Autopilot/pull/21503 to have effect immediately always and not just when you set a new loiter for example.\r\n\r\nThe speed interface / handling in Navigator is quite ugly so I hope we get to fix it more fundamentally after the release. ",
          "state": "APPROVED",
          "type": "review"
        },
        {
          "author": "RomanBapst",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "[BACKPORT] Avoid unexpected repositions",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/22100",
    "number": 22100,
    "created_at": "2023-09-19T15:40:58Z",
    "merged": true,
    "merged_at": "2023-09-19T23:16:03Z",
    "state": "closed",
    "conversation": {
      "author": "tstastny",
      "body": "backport of https://github.com/PX4/PX4-Autopilot/pull/22078\r\n\r\n### Changelog Entry\r\nFor release notes:\r\n```\r\nBugfix: Don't allow external reposition commands without a mode switch, and ensure old reposition commands are not erroneously set.\r\n```",
      "issue_comments": [],
      "review_comments": [],
      "reviews": [
        {
          "author": "dagar",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "VTOL Takeoff: Use global position instead of home for takoeff",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/22097",
    "number": 22097,
    "created_at": "2023-09-19T10:47:07Z",
    "merged": true,
    "merged_at": "2023-09-19T17:00:54Z",
    "state": "closed",
    "conversation": {
      "author": "RomanBapst",
      "body": "\r\n### Solved Problem\r\nWhen the vehicle home position does not coincide with the takeoff position the vehicle drifts off towards the home position during takeoff which is not the expected behavior.\r\n\r\n\r\n### Solution\r\n- Use global position for takeoff instead of home position.\r\n\r\n### Changelog Entry\r\nFor release notes:\r\n```\r\nBugfix: \r\nPrevent VTOL Takeoff from drifting during takeoff ascent when home position does not coincide with takeoff position.\r\n```",
      "issue_comments": [],
      "review_comments": [
        {
          "author": "sfuhrer",
          "created_at": "2023-09-19T11:19:03Z",
          "body": "What happens actually if that's not fulfilled? ",
          "path": "src/modules/navigator/vtol_takeoff.cpp",
          "position": 5,
          "type": "review_comment"
        },
        {
          "author": "RomanBapst",
          "created_at": "2023-09-19T17:00:21Z",
          "body": "@sfuhrer Then the triplet will not be published and not takeoff will happen.",
          "path": "src/modules/navigator/vtol_takeoff.cpp",
          "position": 5,
          "type": "review_comment"
        }
      ],
      "reviews": [
        {
          "author": "sfuhrer",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Avoid unexpected repositions",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/22078",
    "number": 22078,
    "created_at": "2023-09-13T17:32:25Z",
    "merged": true,
    "merged_at": "2023-09-13T19:29:31Z",
    "state": "closed",
    "conversation": {
      "author": "tstastny",
      "body": "<!--\r\n\r\nThank you for your contribution!\r\n\r\nGet early feedback through\r\n- Dronecode Discord: https://discord.gg/dronecode\r\n- PX4 Discuss: http://discuss.px4.io/\r\n- opening a draft pr and sharing the link\r\n\r\n-->\r\n\r\n### Solved Problem\r\n1. Geofence reposition lifetime: when in RTL, the geofence reposition setpoint is ignored (ok, fine) - however, the reposition struct that holds that geofence position is stored until the next flight. If a manual control loss then engages a hold (during RTL delay time), the reposition setpoint is taken for the hold, which may be anywhere else other than the vehicle's current position.. which would be the desired hold position.\r\n2. External reposition commands without a requested mode switch (flag) are silently accepted and can cause unexpected positioning when hold is engaged.\r\n\r\n### Solution\r\n1. In the loiter activation methods, check the reposition setpoint's timestamp in addition to validity.\r\n3. Don't allow reposition commands without a requested mode switch.\r\n\r\n### Changelog Entry\r\nFor release notes:\r\n```\r\nBugfix: Don't allow external reposition commands without a mode switch, and ensure old reposition commands are not erroneously set.\r\n```\r\n\r\n### Alternatives\r\nReal solution is not sharing the reposition struct between multiple modes, and not reusing loiter mode for goto and hold.\r\n\r\n### Test coverage\r\n- used libmav to send a reposition command without the modeswitch bit.. it rejects now\r\n- test case:\r\n  - unplug manual control\r\n  - let the multicopter rtl with geo fence boundary set near home\r\n  - geo fence sets reposition struct somewhere along the path towards home (but rtl ignores)\r\n  - vehicle lands, disarms\r\n  - arm and takeoff again in manual\r\n  - unplug manual control\r\n  - rtl ensues\r\n  - the rtl hold delay before returning to home is correctly set to the vehicle's current position (not the previously set reposition struct from last flight)",
      "issue_comments": [],
      "review_comments": [],
      "reviews": [
        {
          "author": "dagar",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "mavlink: increase first mission read timeout",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/22057",
    "number": 22057,
    "created_at": "2023-09-07T18:26:54Z",
    "merged": false,
    "merged_at": null,
    "state": "closed",
    "conversation": {
      "author": "dagar",
      "body": " - relax timeout considerably, but only during init (typically when system is first starting up)\r\n\r\nSome boards are hitting this on the test rack, but it's fine if only happening at system startup when everything fighting to start in parallel.\r\n\r\n![image](https://github.com/PX4/PX4-Autopilot/assets/84712/0b0bcdf8-b74b-41d0-9ac6-5f5e6e739259)\r\n",
      "issue_comments": [
        {
          "author": "dagar",
          "created_at": "2023-09-07T18:40:30Z",
          "body": "Unless this is just a race condition with `navigator` establishing `DM_KEY_MISSION_STATE` (which is argubably obsolete anyway) in the first place.",
          "type": "issue_comment"
        },
        {
          "author": "dagar",
          "created_at": "2023-09-07T18:55:24Z",
          "body": "Something else is going on here, increasing the timeout made this fail on more boards.\r\n\r\n",
          "type": "issue_comment"
        },
        {
          "author": "dagar",
          "created_at": "2023-09-07T19:01:15Z",
          "body": "I had the dataman id indexing wrong, the problem was actually with DM_KEY_SAFE_POINTS and DM_KEY_FENCE_POINTS (items 0 & 1), not DM_KEY_WAYPOINTS_OFFBOARD_0/DM_KEY_WAYPOINTS_OFFBOARD_1.",
          "type": "issue_comment"
        },
        {
          "author": "dagar",
          "created_at": "2023-09-07T23:20:43Z",
          "body": "Proper fix is https://github.com/PX4/PX4-Autopilot/pull/22058 ",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": []
    }
  },
  {
    "title": "FixedWingPosControl: Handle waypoint type LAND for VTOL",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21985",
    "number": 21985,
    "created_at": "2023-08-21T11:33:32Z",
    "merged": false,
    "merged_at": null,
    "state": "closed",
    "conversation": {
      "author": "RomanBapst",
      "body": "### Solved Problem\r\nUntil now the navigator was hiding LAND type setpoints from the fixed wing position controller for VTOL_LAND items.\r\nIt published the wayoint as a normal position waypoint which made the position controller unaware of an impending transition. Furthermore, navigator internally set the altitude acceptance radius for a VTOL_LAND item to infinity (don't care about altitude) while the position controller was still using the default fixed wing altitude acceptance radius. In the worst case this causes the position controller to initiate a loiter during the approach to the land waypoint when the altitude error exceeded the threshold defined by the acceptance value.\r\n\r\n\r\nFixes #{Github issue ID}\r\n\r\n### Solution\r\nIt makes more sense to make the position controller aware of the setpoint type. This allows the position controller to take actions depending on the setpoint type (e.g. never loiter to recover altitude during the approach to a land waypoint.)\r\n\r\n### Changelog Entry\r\n```\r\nBugfix: Fixed issues where fixed wing position controller could instantiate a loiter when approaching a VTOL_LAND waypoint.\r\n```\r\n\r\n### Alternatives\r\n\r\n\r\n### Test coverage\r\n- Unit/integration test: ...\r\n- Simulation/hardware testing logs: https://review.px4.io/\r\n\r\n### Context\r\nRelated links, screenshot before/after, video\r\n",
      "issue_comments": [
        {
          "author": "RomanBapst",
          "created_at": "2024-01-16T10:19:56Z",
          "body": "Addressed by  #22642",
          "type": "issue_comment"
        }
      ],
      "review_comments": [
        {
          "author": "RomanBapst",
          "created_at": "2023-08-21T13:59:49Z",
          "body": "```suggestion\r\n\t\tint32_t val = 0;\r\n```",
          "path": "src/modules/fw_pos_control/FixedwingPositionControl.cpp",
          "position": 13,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2023-08-21T16:50:02Z",
          "body": "Couldn't this removal of the default cmd to type WAYPOINT cause problems? Why is it necessary in the context of this PR?",
          "path": "src/modules/navigator/mission.cpp",
          "position": 4,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2023-08-21T16:57:23Z",
          "body": "What about a normal LAND command? Eg together with a backtransition waypoint?",
          "path": "src/modules/navigator/mission_block.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "RomanBapst",
          "created_at": "2023-08-24T05:48:36Z",
          "body": "@sfuhrer Because if you scroll a few lines up you will see that we are in the context of NAV_CMD_VTOL_LAND and we should not need to tamper with the nav command just to achieve an expected behavior. Now, the position controller understands position setpoint type land so we can let it handle it. That's much cleaner IMO.",
          "path": "src/modules/navigator/mission.cpp",
          "position": 4,
          "type": "review_comment"
        },
        {
          "author": "RomanBapst",
          "created_at": "2023-08-24T05:50:57Z",
          "body": "@sfuhrer That is handled by `vtol_back_transition` flag.\r\nBut it's good that you bring it up. I actually tested it and I find this worflow highly confusing. I did not even understand from the way it's planned in QGC where the actual backtransition is going to happen. Also the mavlink specs don't actually give any helpful information how to use this command. In the end, that's the reason why VTOL_LAND was invented but we still should increase clarity for this option.",
          "path": "src/modules/navigator/mission_block.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2023-08-24T10:46:51Z",
          "body": "right, I was not at the right location, all good!",
          "path": "src/modules/navigator/mission.cpp",
          "position": 4,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2023-08-24T10:49:06Z",
          "body": "okay, if the behavior isn't changed for the separate transition and land items workflow it's all good for now. ",
          "path": "src/modules/navigator/mission_block.cpp",
          "position": 1,
          "type": "review_comment"
        }
      ],
      "reviews": [
        {
          "author": "sfuhrer",
          "created_at": "",
          "body": "Makes sense to me, though even nicer would it be if we had a \"follow line\" interface to the position controller (instead of having it customized for the landing only). ",
          "state": "COMMENTED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "multiple: Fix abs(int) usage on float values",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21963",
    "number": 21963,
    "created_at": "2023-08-14T13:30:30Z",
    "merged": true,
    "merged_at": "2023-08-15T08:18:32Z",
    "state": "closed",
    "conversation": {
      "author": "sverrevr",
      "body": "### Solved Problem\r\nResolves https://github.com/PX4/PX4-Autopilot/issues/21924\r\n\r\n### Solution\r\nSolves incorrect usage of abs. See https://github.com/PX4/PX4-Autopilot/issues/21924 for details\r\n\r\n### Changelog Entry\r\nFor release notes:\r\n```\r\nFeature/Bugfix XYZ\r\nNew parameter: XYZ_Z\r\nDocumentation: Solves incorrect usage of abs\r\n```\r\n\r\n### Alternatives\r\nN/A\r\n\r\n### Test coverage\r\n- Unit/integration test: All tests still pass\r\n- Simulation/hardware testing logs: None\r\n\r\n### Context\r\nI realized that using abs() on float values casts them to int, which caused problems in some code I was working on. While searching through the code I realized that there were 3 places abs is currently being used on float values which can cause problems/inaccuracies.  I don't have a setup to test these changes, so I have not tested it beyond verifying that no tests fail.\r\n",
      "issue_comments": [
        {
          "author": "dagar",
          "created_at": "2023-08-14T13:48:16Z",
          "body": "Thanks @sverrevr, I suspect some of the confusion comes from std::abs (and using namespace std). ",
          "type": "issue_comment"
        },
        {
          "author": "dagar",
          "created_at": "2023-08-14T14:24:54Z",
          "body": "We could consider ratcheting up the conversion warnings (+ -Werror), but last time I checked there's a huge number of harmless cases we'd have to adjust first.\r\n\r\n-Wconversion, -Wfloat-conversion, -Wsign-conversion, etc",
          "type": "issue_comment"
        },
        {
          "author": "sverrevr",
          "created_at": "2023-08-15T10:29:01Z",
          "body": "> We could consider ratcheting up the conversion warnings (+ -Werror), but last time I checked there's a huge number of harmless cases we'd have to adjust first.\r\n> \r\n> -Wconversion, -Wfloat-conversion, -Wsign-conversion, etc\r\n\r\nI think that would be ideal, but I see that it can be a large job to fix all the harmless cases ",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": [
        {
          "author": "dagar",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Remove checkIfBelowHomeAltitude in Navigator",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21904",
    "number": 21904,
    "created_at": "2023-07-28T06:57:43Z",
    "merged": false,
    "merged_at": null,
    "state": "closed",
    "conversation": {
      "author": "potaito",
      "body": "### Solved Problem\r\nWhen taking off an elevated location (hill, mountain) and planning a mission in a valley relative to the take off location, PX4 will throw warnings for each single waypoint whose altitude is below the home location's altitude. This warning was most likely added to protect the user from mistakes, but flying below the home altitude with a drone is not so uncommon and the warnings are therefore too excessive.\r\n\r\n\r\n### Solution\r\nThe check for the waypoint altitude being below home has been completely removed. \r\n\r\n### Changelog Entry\r\nFor release notes:\r\n```\r\nFeature: Don't print warnings for waypoints with altitudes below the home position\r\n```\r\n\r\n### Alternatives\r\nWe could also limit to one warning per mission that contains waypoints below home, instead of one warning per waypoint. But I'd rather not have any unnecessary warnings during nominal operation of the drone.\r\n\r\n### Test coverage\r\nTested in simulation.\r\n\r\n#### Prior to this PR\r\n```\r\nINFO  [mavlink] mode: Onboard, data rate: 4000000 B/s on udp port 14580 remote port 14540\r\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\r\n[Msg] Publicized address: 192.168.0.30\r\nINFO  [mavlink] mode: Onboard, data rate: 4000 B/s on udp port 14280 remote port 14030\r\nINFO  [mavlink] mode: Gimbal, data rate: 400000 B/s on udp port 13030 remote port 13280\r\nINFO  [logger] logger started (mode=all)\r\nINFO  [logger] Start file log (type: full)\r\nINFO  [logger] [logger] ./log/2023-07-28/06_55_16.ulg\t\r\nINFO  [logger] Opened full log file: ./log/2023-07-28/06_55_16.ulg\r\nINFO  [mavlink] MAVLink only on localhost (set param MAV_{i}_BROADCAST = 1 to enable network)\r\nINFO  [mavlink] MAVLink only on localhost (set param MAV_{i}_BROADCAST = 1 to enable network)\r\nINFO  [px4] Startup script returned successfully\r\npxh> INFO  [tone_alarm] home set\r\nWARN  [mission_feasibility_checker] Warning: Waypoint 2 below home\t\r\nWARN  [mission_feasibility_checker] Warning: Waypoint 3 below home\t\r\nWARN  [mission_feasibility_checker] Warning: Waypoint 4 below home\t\r\n[Wrn] [Event.cc:61] Warning: Deleting a connection right after creation. Make sure to save the ConnectionPtr from a Connect call\r\nINFO  [tone_alarm] notify positive\r\nINFO  [commander] Ready for takeoff!\r\nINFO  [commander] Armed by external command\t\r\nINFO  [tone_alarm] arming warning\r\nINFO  [navigator] Executing Mission\t\r\nINFO  [navigator] Takeoff to 2.5 meters above home\t\r\nINFO  [commander] Takeoff detected\t\r\nINFO  [navigator] Mission finished, loitering\r\n```\r\nhttps://logs.px4.io/plot_app?log=b91adbc1-f7e4-448d-aa3b-5194d4fb407f\r\n\r\n#### After this PR\r\nNo warnings:\r\n```\r\nINFO  [mavlink] mode: Onboard, data rate: 4000000 B/s on udp port 14580 remote port 14540\r\n[Msg] Connected to gazebo master @ http://127.0.0.1:11345\r\n[Msg] Publicized address: 192.168.0.30\r\nINFO  [mavlink] mode: Onboard, data rate: 4000 B/s on udp port 14280 remote port 14030\r\nINFO  [mavlink] mode: Gimbal, data rate: 400000 B/s on udp port 13030 remote port 13280\r\nINFO  [logger] logger started (mode=all)\r\nINFO  [logger] Start file log (type: full)\r\nINFO  [logger] [logger] ./log/2023-07-28/06_53_28.ulg\t\r\nINFO  [logger] Opened full log file: ./log/2023-07-28/06_53_28.ulg\r\nINFO  [mavlink] MAVLink only on localhost (set param MAV_{i}_BROADCAST = 1 to enable network)\r\nINFO  [mavlink] MAVLink only on localhost (set param MAV_{i}_BROADCAST = 1 to enable network)\r\nINFO  [px4] Startup script returned successfully\r\npxh> INFO  [tone_alarm] home set\r\n[Wrn] [Event.cc:61] Warning: Deleting a connection right after creation. Make sure to save the ConnectionPtr from a Connect call\r\nINFO  [tone_alarm] notify positive\r\nINFO  [commander] Ready for takeoff!\r\nINFO  [commander] Armed by external command\t\r\nINFO  [tone_alarm] arming warning\r\nINFO  [navigator] Executing Mission\t\r\nINFO  [navigator] Takeoff to 2.5 meters above home\t\r\nINFO  [commander] Takeoff detected\t\r\nINFO  [navigator] Mission finished, loitering\r\n```\r\nhttps://logs.px4.io/plot_app?log=330407db-73a0-4fc5-8203-09a3a94da4c6\r\n\r\n",
      "issue_comments": [
        {
          "author": "potaito",
          "created_at": "2023-07-28T08:22:54Z",
          "body": "I would also have to remove the event `\"navigator_mis_wp_below_home\"` if the intent of this PR is accepted",
          "type": "issue_comment"
        },
        {
          "author": "RomanBapst",
          "created_at": "2023-07-31T08:12:15Z",
          "body": "@potaito Maybe we should issue the warning once when the altitude mode is relative to home point. In that case it's quite likely that the user does not intend to fly lower than home. But we can remove the warning when altitude mode is set to global. In that case the user has either specified AMSL altitudes or altitudes above terrain (which are converted to AMSL by QGC)",
          "type": "issue_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2024-09-17T12:29:23Z",
          "body": "Done in https://github.com/PX4/PX4-Autopilot/pull/22624",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": []
    }
  },
  {
    "title": "Fix mission failed bug",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21888",
    "number": 21888,
    "created_at": "2023-07-26T14:28:44Z",
    "merged": true,
    "merged_at": "2023-07-27T05:21:30Z",
    "state": "closed",
    "conversation": {
      "author": "KonradRudin",
      "body": "<!--\r\n\r\nThank you for your contribution!\r\n\r\nGet early feedback through\r\n- Dronecode Discord: https://discord.gg/dronecode\r\n- PX4 Discuss: http://discuss.px4.io/\r\n- opening a draft pr and sharing the link\r\n\r\n-->\r\n\r\n### Solved Problem\r\nI found two issues with mission uploading in the newest main. \r\n\r\n1. Mission module per default assumed the mission was not valid when the mission uorb topic changed. Only when the mission counter is updated, it actually checks the validity of the mission. But since the mission topic gets updated as well when the geofence or safepoints changed, this would lead to wrongly failed missions in the mission module where the mission would be reset.\r\n2. The mission counter in mavlink_mission module was always set to 0 on startup. When on the last powercycle, exactly one mission was loaded, the mission counter in the dataman was set to one. On the next powerccle and the first mission upload, the mavlink_mission would report again a mission counter of 1. This would lead in the mission module to believe, that the mission was not updated at all.\r\n\r\nFixes #{Github issue ID}\r\n\r\n### Solution\r\n\r\n1. Mission module loads the previously calculated mission validity and if the mission changes, calculates it newly.\r\n2. mavlink_mission loads the mission counter on startup from the datamn (safepoints as well, already done for geofence).\r\n\r\n### Changelog Entry\r\nFor release notes:\r\n```\r\nBugfix: Mission failed on geofence/safepoint upload\r\nBufgix: Mission failed on first mission upload\r\n```\r\n\r\n### Test coverage\r\n- SITL test: checking the px4 console output.\r\n",
      "issue_comments": [],
      "review_comments": [],
      "reviews": [
        {
          "author": "bkueng",
          "created_at": "",
          "body": "Thanks, a good reminder to me to not just quickly do things.",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Geofence: Disable pre-emptive geofence predictor by default",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21875",
    "number": 21875,
    "created_at": "2023-07-23T20:53:44Z",
    "merged": true,
    "merged_at": "2023-07-24T14:25:31Z",
    "state": "closed",
    "conversation": {
      "author": "junwoo091400",
      "body": "## About\r\nAs discussed in https://discuss.px4.io/t/px4-maintainers-call-may-30-2023/32372#v114-new-beta-release-5, Geofence predictor feature was not well tested / maintained, hence was agreed upon to be disabled for the 1.14 release. And this was merged with the PR: https://github.com/PX4/PX4-Autopilot/pull/21657\r\n\r\nAlthough we didn't discuss how to proceed with this feature in `main`, since it isn't actively maintained, I think it makes sense to backport this back to `main`.",
      "issue_comments": [
        {
          "author": "AlexKlimaj",
          "created_at": "2023-07-24T07:48:19Z",
          "body": "I highly support this.",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": [
        {
          "author": "dagar",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Support Figure of eight loitering",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/21852",
    "number": 21852,
    "created_at": "2023-07-14T14:59:51Z",
    "merged": true,
    "merged_at": "2023-10-31T19:58:00Z",
    "state": "closed",
    "conversation": {
      "author": "KonradRudin",
      "body": "<!--\r\n\r\nThank you for your contribution!\r\n\r\nGet early feedback through\r\n- Dronecode Discord: https://discord.gg/dronecode\r\n- PX4 Discuss: http://discuss.px4.io/\r\n- opening a draft pr and sharing the link\r\n\r\n-->\r\n\r\n### Solved Problem\r\nAdd support for a figure of eight loitering pattern for fixed wing vehicles (can e.g. be used to replace orbit when tracking POIs with a limited panning gimbal). This adds the support for the MAV_CMD_DO_FIGURE_EIGHT mavlink command currently defined in the development dialect.\r\n\r\n### Solution\r\n- Add a new functionality in the FixedWingPositionControl to process a figure of eight loitering pattern. The class checks the relevant segment of the figure of eight and passes the path segment to the npfg guidance logic for lateral guidance.\r\n- Addded a configuration to enable the figure of 8 loitering. It is disabled by default since it would need the development mavlink dialect (only enabled for sitl config).\r\n\r\n### Changelog Entry\r\nFor release notes:\r\n```\r\nFeature Support for Figure 8 loiter pattern\r\n```\r\n\r\n### Alternatives\r\n\r\n### Test coverage\r\n- Simulation tests performed in sitl.\r\n- Build tests for fmu_v5x\r\n\r\n![Screenshot from 2023-07-14 16-50-24](https://github.com/PX4/PX4-Autopilot/assets/98741601/52325dc6-6aec-4f91-9d01-c3e5d67af798)\r\n\r\n\r\n### Context\r\nTo discuss:\r\n\r\n- [ ] Currently QGCS has no support for sending this command only AMC is this a problem?\r\n- [ ] Added a kconfig parameter to disable it since we need the development mavlink dialect to enable it. But i have not found a solution to make a dependency on the development dialect. Any input on how to handle this is appreciated.\r\n",
      "issue_comments": [
        {
          "author": "tstastny",
          "created_at": "2023-09-08T14:48:57Z",
          "body": "@dagar just so that this one doesnt get kicked down the road too far:\r\n\r\n> Added a kconfig parameter to disable it since we need the development mavlink dialect to enable it. But i have not found a solution to make a dependency on the development dialect. Any input on how to handle this is appreciated.\r\n\r\ndo you have insights here how to handle? would the current action look something like default kconfiging the fig8 as disabled while there is a development mavlink link? (but then need to still make sure we have mavsdk test and a build that can run in ci.. even though on all the main binary builds it would be disabled)\r\n\r\n> no GCS implementation\r\n\r\nIs this already a nogo? or would mavsdk test be enough while this is in mavlink development.xml?\r\n\r\nIf the lack of operator command ease marks this as not good for merging now.. let's just decide quickly so that we'll take this back downstream until such point that we can bring it in more properly upstream.\r\n\r\n\r\n@KonradRudin if we proceed with this PR - you may need to check the implications of this PR on the figure eight logic #21988 ",
          "type": "issue_comment"
        },
        {
          "author": "Jaeyoung-Lim",
          "created_at": "2023-09-27T09:05:41Z",
          "body": "> Is this already a nogo? or would mavsdk test be enough while this is in mavlink development.xml?\r\n\r\n@tstastny Why not just add it to QGC :smirk:? ",
          "type": "issue_comment"
        },
        {
          "author": "tstastny",
          "created_at": "2023-09-27T09:10:08Z",
          "body": "> @tstastny Why not just add it to QGC 😏?\r\n\r\n@KonradRudin @RomanBapst  ^^",
          "type": "issue_comment"
        },
        {
          "author": "tstastny",
          "created_at": "2023-10-30T15:35:52Z",
          "body": "@dagar is this ok to go in now? before we e.g. run out of flash / need another rebase with other fixed-wing things on the docket?\r\n\r\n@KonradRudin i re-started the tailsitter test, it was failing, but i didnt see an erroneous timeout.. may actually be something wrong, can you check? https://github.com/PX4/PX4-Autopilot/actions/runs/6655895059/job/18096246149#step:17:1383\r\n",
          "type": "issue_comment"
        },
        {
          "author": "tstastny",
          "created_at": "2023-10-30T16:53:43Z",
          "body": "@dagar all checks passing - should we smash the button?",
          "type": "issue_comment"
        },
        {
          "author": "KonradRudin",
          "created_at": "2023-10-31T15:59:24Z",
          "body": "@tstastny had to rebase, since it had some merge conflicts (only in the mavsdk tests).",
          "type": "issue_comment"
        }
      ],
      "review_comments": [
        {
          "author": "dagar",
          "created_at": "2023-10-25T20:03:08Z",
          "body": "This part could be \r\n```suggestion\r\n#if defined(MAVLINK_MSG_ID_FIGURE_EIGHT_EXECUTION_STATUS)\r\n```",
          "path": "src/modules/mavlink/mavlink_messages.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2023-10-25T20:04:42Z",
          "body": "How about we make the mavlink part dependent on `MAVLINK_MSG_ID_ACTUATOR_CONTROL_TARGET`\r\n\r\nThen either drop CONFIG_FIGURE_OF_EIGHT or make it clear it's FW (with a dependency on CONFIG_MODULES_FW_POS_CONTROL).",
          "path": "boards/px4/sitl/default.px4board",
          "position": 4,
          "type": "review_comment"
        },
        {
          "author": "tstastny",
          "created_at": "2023-10-25T20:31:23Z",
          "body": "> How about we make the mavlink part dependent on MAVLINK_MSG_ID_ACTUATOR_CONTROL_TARGET\r\n\r\ndid you mean `MAVLINK_MSG_ID_FIGURE_EIGHT_EXECUTION_STATUS`?",
          "path": "boards/px4/sitl/default.px4board",
          "position": 4,
          "type": "review_comment"
        },
        {
          "author": "KonradRudin",
          "created_at": "2023-10-26T12:11:24Z",
          "body": "Sounds like a good idea, thanks for the input.",
          "path": "boards/px4/sitl/default.px4board",
          "position": 4,
          "type": "review_comment"
        },
        {
          "author": "KonradRudin",
          "created_at": "2023-10-26T14:16:00Z",
          "body": "@dagar the dependency is already defined in the kconfig, i guess this should be enough?",
          "path": "boards/px4/sitl/default.px4board",
          "position": 4,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2023-10-26T14:23:03Z",
          "body": "It doesn't need to be completely tied to mavlink.",
          "path": "boards/px4/sitl/default.px4board",
          "position": 4,
          "type": "review_comment"
        },
        {
          "author": "KonradRudin",
          "created_at": "2023-10-26T14:26:09Z",
          "body": "Yes the mavlink part i will make only dependent on the MAVLINK_MSG_ID but the CONFIG_FIGURE_OF_EIGHT is already dependent on MODULES_FW_POS_CONTROL in the kconfig.",
          "path": "boards/px4/sitl/default.px4board",
          "position": 4,
          "type": "review_comment"
        },
        {
          "author": "KonradRudin",
          "created_at": "2023-10-26T18:28:25Z",
          "body": "Hey @dagar with the new commit, i have removed the dependency to the development dialect. you can now build the figure of eight with the common, you just wont get any feedback message. ",
          "path": "boards/px4/sitl/default.px4board",
          "position": 4,
          "type": "review_comment"
        }
      ],
      "reviews": [
        {
          "author": "tstastny",
          "created_at": "",
          "body": "",
          "state": "DISMISSED",
          "type": "review"
        }
      ]
    }
  }
]