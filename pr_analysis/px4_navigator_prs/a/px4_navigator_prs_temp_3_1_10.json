[
  {
    "title": "Navigator: some loiter refactoring and fixes",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/16646",
    "number": 16646,
    "created_at": "2021-01-25T18:54:31Z",
    "merged": true,
    "merged_at": "2021-01-29T18:37:01Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "**Describe problem solved by this pull request**\r\n- \"unable to reach heading within timeout\" error when loitering to altitude\r\n- \"hacky\" loiter position acceptance (1.2*loiter_radius)\r\n- MAV_CMD_NAV_LOITER_TIME: param2 (heading required) not considered\r\n- exit via tangent (xtrack) broken for NAV_CMD_LOITER_TIME_LIMIT \r\n\r\n**Describe your solution**\r\n- fix \"unable to reach heading\" bug when doing loiter to alt with heading wait \r\n- for loiter acceptance in fixed-wing, it is cleaner to use (loiter radius + L1 acceptance distance) to decide on acceptance, instead of the magic 1.2 factor in front of the loiter radius  \r\n- add ability of \"heading wait\" for NAV_CMD_LOITER_TIME_LIMIT (possible as mavlink/mavlink#1383 was merged)\r\n- enable exit via tangent (xtrack) for both NAV_CMD_LOITER_TIME_LIMIT and NAV_CMD_LOITER_TO_ALT, but let exit back to center connection as default\r\n\r\n\r\nGeneral: \r\n- unify logic inside Navigator for NAV_CMD_LOITER_TIME_LIMIT and NAV_CMD_LOITER_TO_ALT\r\n--> reach position --> start loitering --> reach altitude --> start timer (if applicable) --> reach exit heading (if applicable) --> declare mission item reached.\r\n\r\n- bit of clean up in Navigator, as I find the current structure more complex than needed. E.g. the return of get_acceptance_radius() should either be what's set in the NAV_ACC_RAD for MC, or the L1 distance for FW, as simple as that (unless I missed something?).\r\n\r\n**Test data / coverage**\r\nSITL and flight tested.\r\n\r\n\r\n**Additional context**\r\n\r\nSome screenshots from a SITL mission (standard VTOL) with a Loiter_time with heading wait (3,4), where 4 is with tangential exit, normal waypoints (with big altitude diff between 6 and 7), and a Loiter_Altitude with heading wait and tangential exit path (9). \r\n\r\nold:\r\n![image](https://user-images.githubusercontent.com/26798987/105750226-c5731300-5f44-11eb-90d6-ee52e675d256.png)\r\n\r\n\r\nnew:\r\n![image](https://user-images.githubusercontent.com/26798987/105751030-c48eb100-5f45-11eb-9ace-976df64ab0b7.png)\r\n\r\n\r\n",
      "issue_comments": [
        {
          "author": "dagar",
          "created_at": "2021-01-25T20:38:20Z",
          "body": "This all looks correct, but as per usual with navigator there are a few areas where it's hard to be 100% sure there aren't unintended repercussions. I'll give it another detailed pass and let's try to identify any additional areas of concern that might warrant testing on other vehicle types or less common situations.",
          "type": "issue_comment"
        }
      ],
      "review_comments": [
        {
          "author": "RomanBapst",
          "created_at": "2021-01-28T06:52:06Z",
          "body": "@sfuhrer Are you sure that removing this logic does not have any side effects?",
          "path": "src/modules/navigator/navigator_main.cpp",
          "position": 31,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2021-01-28T09:11:58Z",
          "body": "@RomanBapst I guess you mainly refer to  `(pos_ctrl_status.timestamp > _pos_sp_triplet.timestamp)`? Do you see a logical reason where this could actually be false?\r\nAt least in SITL it wasn't yet a problem, but this specific part wasn't yet flight tested.",
          "path": "src/modules/navigator/navigator_main.cpp",
          "position": 31,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2021-01-28T14:02:35Z",
          "body": "Should this be the parameter (MIS_YAW_ERROR)?",
          "path": "src/modules/navigator/mission_block.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2021-01-28T14:06:04Z",
          "body": "It might be safer if you flip it around so that for FW (and rover) you're using pos_ctrl_status.acceptance_radius, otherwise fallback to using the default acceptance radius.\r\n\r\nI would also keep a minimum pos_ctrl_status validity check, maybe just pos_ctrl_status.timestamp != 0 and finite.",
          "path": "src/modules/navigator/navigator_main.cpp",
          "position": 31,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2021-01-29T10:17:08Z",
          "body": "True, think that'd be more consistent. ",
          "path": "src/modules/navigator/mission_block.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2021-01-29T10:50:36Z",
          "body": "@dagar how about it now? a7a5303bb6a93850c2c373575f5587e15c547dbb",
          "path": "src/modules/navigator/navigator_main.cpp",
          "position": 31,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2021-01-29T10:50:44Z",
          "body": "addressed in a7a5303bb6a93850c2c373575f5587e15c547dbb",
          "path": "src/modules/navigator/mission_block.cpp",
          "position": 1,
          "type": "review_comment"
        }
      ],
      "reviews": [
        {
          "author": "RomanBapst",
          "created_at": "",
          "body": "@sfuhrer I had a look at this in detail and the changes look ok.\r\nIt's of course always hard to judge the effects in navigator but I definitely find this cleaner than before.",
          "state": "DISMISSED",
          "type": "review"
        },
        {
          "author": "RomanBapst",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        },
        {
          "author": "dagar",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "[WIP] Use gps data with increased precision",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/16645",
    "number": 16645,
    "created_at": "2021-01-25T18:31:11Z",
    "merged": false,
    "merged_at": null,
    "state": "closed",
    "conversation": {
      "author": "lukegluke",
      "body": "double for lat and lon in degrees, float for alt in meters.\r\n\r\n1. 1e7 deg precision for lat and long can be not enough in several specific cases (for example RTK)\r\n2. In most calculations (especially in ekf) px4 internally already uses lat, lon as doubles converting them on input and output every time back and forward from deg/1e-7deg (and m/mm for alt).\r\n3. 1e7 deg precision is still used as output in legacy things, like current gps mavlink messages.\r\n\r\ntodo: gps drives need to be updated\r\n\r\nAlso dgps_age field added to sensor_gps.msg and vehicle_gps_position.msg  (and filled for MavlinkStreamGPS2Raw). It should be parsed it gps drivers where available. But probably this change should go to separate PR.",
      "issue_comments": [
        {
          "author": "lukegluke",
          "created_at": "2021-01-25T18:32:20Z",
          "body": "Hi @dagar ,\r\n\r\nI made this patch as I mentioned in https://github.com/PX4/PX4-ECL/issues/951#issuecomment-757468006\r\n\r\nIn our project we use only one modified gps nmea driver and have tested only ekf core, we don't use many modules/drivers and don't fly, so in PR I modified several files only theoretical without testing, just by searching strings like: gps.lat, gps.alt, 1.0e7, 1.e7, 1e7, 1.0e-7, 1.e-7, 1e-7. I could easily missed something, especially regarding altitude. It is definitely needs accurately checking and testing.\r\n\r\nThis is the reference point for you. We don't use px4 boards. **I can't maintain and test this PR further**. Please free to edit, move, close this as you wish. Hopes it may help you somehow a little.\r\nThanks for all you work.",
          "type": "issue_comment"
        },
        {
          "author": "dagar",
          "created_at": "2021-01-25T20:06:55Z",
          "body": "Thanks @lukegluke, it wasn't clear to me there's any readily available equipment where int32 is limiting.",
          "type": "issue_comment"
        },
        {
          "author": "mrpollo",
          "created_at": "2021-02-01T18:16:59Z",
          "body": "@lukegluke could you kindly give us an update on the status of this PR? it looks like it's failing on CI and needs a rebase.",
          "type": "issue_comment"
        },
        {
          "author": "lukegluke",
          "created_at": "2021-02-05T16:56:42Z",
          "body": "@mrpollo sorry for the late reply. As I mentioned this is the kind of aid for Daniel if he is going to increased gps data precision someday. I can't maintain and test this PR, so I'm closing it to not disturb you anyway.",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": []
    }
  },
  {
    "title": "increase vehicle command queue depth and updates modules to consume all available queued commands",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/16635",
    "number": 16635,
    "created_at": "2021-01-24T18:44:53Z",
    "merged": true,
    "merged_at": "2021-01-26T17:00:19Z",
    "state": "closed",
    "conversation": {
      "author": "dagar",
      "body": "This is to prevent the possible loss of vehicle_commands. At the moment it's likely only problematic in the case of high rate vehicle_commands from things like vmount, but better safe than sorry.\r\n\r\n - fixes https://github.com/PX4/PX4-Autopilot/issues/16630",
      "issue_comments": [],
      "review_comments": [],
      "reviews": [
        {
          "author": "bkueng",
          "created_at": "",
          "body": "",
          "state": "DISMISSED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "RTL: VTOL: do the land delay loitering (RTL_LAND_DELAY) in fixed-wing flight",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/16582",
    "number": 16582,
    "created_at": "2021-01-18T17:24:19Z",
    "merged": true,
    "merged_at": "2021-01-29T12:46:34Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "\r\n**Describe problem solved by this pull request**\r\nhttps://github.com/PX4/PX4-Autopilot/issues/16500 --> for some VTOL applications it is desired if the land delay loitering is done while still in fixed-wing mode, instead of hover. I see these use-cases:\r\n- if there should be a delay before landing, such that pilot could interfere (better do that in FW, as much more energy efficient)\r\n- to estimate wind speed before triggering the backtransition, such that the distance to home can be optimized\r\n\r\n**Describe your solution**\r\nChange RTL state order \r\nold:   (CLIMB-->RETURN-->DESCEND-->TRANSITION-->MOVE_TO_LAND_HOVER-->LOITER-->LAND)\r\nnew: (CLIMB-->RETURN-->DESCEND-->LOITER-->TRANSITION-->MOVE_TO_LAND_HOVER-->LAND)\r\n\r\n**Describe possible alternatives**\r\nSome logic with NAV_FORCE_VT --> e.g. if NAV_FORCE_VT is set to false, then do not execute transition but directly go to loiter and then land in FW. Sounds dangerous to me, would have the advantage that if a user wants to have the loitering done in hover also for a VTOL, that could be set up.\r\n\r\n**Test data / coverage**\r\nSITL tested. \r\n\r\n\r\n",
      "issue_comments": [
        {
          "author": "MartinStokelj",
          "created_at": "2021-01-19T07:09:01Z",
          "body": "@sfuhrer If I understand this right it says \"go to loiter and then land in FW\". \r\nWe don't want him to land and also not land him as FW, this would damage the drone.\r\nIf param RTL_LAND_DELAY is set to -1 he should loiter as FW above WP and not auto land or auto transition to MC...",
          "type": "issue_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2021-01-19T08:32:52Z",
          "body": "> it says \"go to loiter and then land in FW\". \r\n\r\nWhere does it say that? That's certainly not the idea, but that after the loiter in FW it transitions and lands in hover.",
          "type": "issue_comment"
        },
        {
          "author": "MartinStokelj",
          "created_at": "2021-01-19T10:45:13Z",
          "body": "sorry I misunderstood, it looks ok now with\r\nRTL_LAND_DELAY -1\r\nNAV_FORCE_VT 0\r\nhttps://review.px4.io/plot_app?log=beb86924-b2a7-48f3-8e35-c1723e8b519d\r\n",
          "type": "issue_comment"
        },
        {
          "author": "RomanBapst",
          "created_at": "2021-01-25T05:39:57Z",
          "body": "@sfuhrer SITL tests are failing. Need to have a closer look if related. Otherwise, I agree with these changes.",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": [
        {
          "author": "RomanBapst",
          "created_at": "",
          "body": "",
          "state": "DISMISSED",
          "type": "review"
        },
        {
          "author": "RomanBapst",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "RTL_LAND_DELAY default to 0 and MIS_DIST_WPS to 5km for VTOL",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/16550",
    "number": 16550,
    "created_at": "2021-01-13T19:03:10Z",
    "merged": true,
    "merged_at": "2021-01-17T11:05:31Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "**Describe problem solved by this pull request**\r\n- find it annoying that RTL_LAND_DELAY is by default at -1 (do not land but loiter), even though for most applications that's not the default (only for FW usually). For FW, RTL_LAND_DELAY is already set to -1 in the defaults.\r\n- the max distance between waypoints is too low with 900m for VTOLs\r\n\r\n\r\n",
      "issue_comments": [
        {
          "author": "Antiheavy",
          "created_at": "2021-01-13T23:50:41Z",
          "body": "> the max distance between waypoints is too low with 900m for VTOLs\r\n\r\nhow much real world testing do you have on 5000 meter default for this?  I've had conversations with @priseborough in the past about concerns of gyro stability and EKF covariance tracking over long periods of straight and level flight.  There is a lack of \"system observability\" during straight and level flight which allows the gyros to wander without good correction from the accelerometers and other sensors measuring turns.  I know from experience with other systems  (non-px4, non-pixhawk) that this is a well understood concern in the world of kalman filtering.  So, this distance limit is driven as much by the quality of your hardware system (gryos usually) as it is the quality of your EKF and flight software.\r\n\r\nHaving said that we have slowly been increasing MIS_DIST_WPS on our fixed wing aircraft over the years, we make incremental and conservative increase a few hundred meters at a time, then spend months of testing, then eventually release to our users, then we increase again, test, release, repeat.  We are currently at 2500 meters for MIS_DIST_WPS using a FMUv4 based autopilot hardware.  No issues with 1000's of flights.\r\n\r\nIf 5000 meters is super well tested and understood then hooray!",
          "type": "issue_comment"
        },
        {
          "author": "mcsauder",
          "created_at": "2021-01-14T01:27:50Z",
          "body": "Hi @Antiheavy !  I flew a 4kg quad 12km straight-line from takeoff on v1.11.2 a few weeks ago on an exceptionally low wind day, (lack of system disturbance), and I have a handful of hexas that have flown straight line range test flights in the past two months beyond 5km.  From a limited number of flights that I have observed this change seems fairly reasonable to me, but I don't doubt the rationale behind your comment in the least.",
          "type": "issue_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2021-01-14T14:39:03Z",
          "body": "@Antiheavy thanks for the input! I actually wasn't aware of this restriction, and seldom have flown with more than 1km between WP. I'll make sure to include that in our testing more regularly. When was the last time you experienced issues on a PX4 based vehicle, and with which release was that?\r\n@priseborough how do you assess the current EKF capabilities, should we be concerned? ",
          "type": "issue_comment"
        },
        {
          "author": "Antiheavy",
          "created_at": "2021-01-17T16:15:08Z",
          "body": ">  I flew a 4kg quad 12km straight-line from takeoff on v1.11.2 a few weeks ago on an exceptionally low wind day, (lack of system disturbance), and I have a handful of hexas that have flown straight line range test flights in the past two months beyond 5km.\r\n\r\n@mcsauder are you able to share what gyro parts were running on your flight controller for these flights?  Just curious.",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": [
        {
          "author": "LorenzMeier",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        },
        {
          "author": "LorenzMeier",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Navigator: VTOL transition command: make transitions smoother",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/16499",
    "number": 16499,
    "created_at": "2021-01-06T14:05:26Z",
    "merged": true,
    "merged_at": "2021-05-03T06:40:54Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "**Describe problem solved by this pull request**\r\nThe transition command waypoints, NAV_CMD_DO_VTOL_TRANSITION, are attached to the previous waypoint that contains a location (e.g. normal waypoint). It then triggers a transition as soon as this waypoint is reached, which happens when the vehicle is within L1 distance to it. Is the L1 distance smaller then the needed space for the transition, then the vehicle overshoots. The current logic is that for a transition waypoint, the waypoint has to be reached again in the new VTOL mode (e.g. in hover after a backtransition). Thus, if it overshoots, it turns around to accept it, and only then proceeds to the next waypoint.\r\nI don't really get in which case this would be desired.\r\n\r\nThis can lead to ugly situations like this:\r\n![VTOLtransitionmaster](https://user-images.githubusercontent.com/26798987/103775614-98f76580-502e-11eb-95ef-b0b14f675bba.png)\r\n\r\n\r\n**Describe your solution**\r\nDo not make it accept the waypoint again in the new VTOL mode, but directly proceed to the next:\r\n![vtoltransition_withfixes](https://user-images.githubusercontent.com/26798987/103775628-9e54b000-502e-11eb-860b-d1f55a596d98.png)\r\nThat means that if you don't have the previous, current and next waypoint in one line, it will make a turn while transitioning. I don't think this should be a big issue, and what we on top could do is limiting the max roll angle during the transition.\r\n\r\n**Describe possible alternatives**\r\n\r\n\r\n**Test data / coverage**\r\nBasic SITL testing.\r\n\r\n**Additional context**\r\nhttps://github.com/PX4/PX4-Autopilot/commit/c31d8ce2b6f04c30b2fde6af08040c074e70e762 looks like it only works with this stuff removed. @dagar Am I missing something or could we safely remove it? I don't really get what it was added for.\r\n\r\n",
      "issue_comments": [
        {
          "author": "sfuhrer",
          "created_at": "2021-01-06T14:08:12Z",
          "body": "@ThomasRigi what do you think?",
          "type": "issue_comment"
        },
        {
          "author": "dagar",
          "created_at": "2021-01-06T15:10:06Z",
          "body": "> c31d8ce looks like it only works with this stuff removed. @dagar Am I missing something or could we safely remove it? I don't really get what it was added for.\r\n\r\nIt certainly looks safe to remove, but it's sometimes hard to tell in here. Let's do a little software archaeology to be sure.",
          "type": "issue_comment"
        },
        {
          "author": "ThomasRigi",
          "created_at": "2021-01-06T17:30:46Z",
          "body": "Did some SITL tests, looks good. \r\n\r\n> c31d8ce looks like it only works with this stuff removed. @dagar Am I missing something or could we safely remove it? I don't really get what it was added for.\r\n\r\nSame as you, I don't know why it's there, but I assume that at the time they had a good reason to add it. It may well be obsolete by now though as the way transitions are handled have changed significantly. The code was added almost 5 years ago (https://github.com/PX4/PX4-Autopilot/pull/3598), which is about three years before I started working with PX4. :sweat_smile: ",
          "type": "issue_comment"
        },
        {
          "author": "ghost",
          "created_at": "2021-01-06T19:29:38Z",
          "body": "I tested this just now in sitl, went into something like this. what am i doing wrong in this one?\r\nseems like it undershoots now.\r\nhttps://review.px4.io/plot_app?log=5be75d9d-c111-4b91-82d3-03eb544da898\r\n\r\n\r\n\r\nmy mission is as below.\r\n![image](https://user-images.githubusercontent.com/25317204/103811799-7ba0b680-5083-11eb-9ff6-f5a6975662aa.png)\r\n![image](https://user-images.githubusercontent.com/25317204/103811917-aee34580-5083-11eb-8c05-f299b0d28c3b.png)\r\n",
          "type": "issue_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2021-01-06T21:03:48Z",
          "body": "> I tested this just now in sitl, went into something like this. what am i doing wrong in this one?\r\n\r\nI couldn't reproduce. Could you share your mission file please?\r\n",
          "type": "issue_comment"
        },
        {
          "author": "ghost",
          "created_at": "2021-01-07T01:43:40Z",
          "body": "\r\n[undershooting_misssion.zip](https://github.com/PX4/PX4-Autopilot/files/5779025/undershooting_misssion.zip)\r\nhere's the mission file. sorry for the delay",
          "type": "issue_comment"
        },
        {
          "author": "ThomasRigi",
          "created_at": "2021-01-07T09:59:58Z",
          "body": "@yuthikasagarage Your mission is incomplete for this new way of handling transitions. Add a (Land) Waypoint after the VTOL Transition command and it will work better. \r\n[undershooting_misssion_fixed.zip](https://github.com/PX4/PX4-Autopilot/files/5780696/undershooting_misssion_fixed.zip)\r\nAs you can see I placed WP9 a bit after WP7. This is approx. the extra distance that the drone was overshooting before. \r\nFor illustrative purposes, observe what happens when you badly place the waypoint after the back transition: \r\n[undershooting_misssion_badly_fixed.zip](https://github.com/PX4/PX4-Autopilot/files/5780741/undershooting_misssion_badly_fixed.zip)\r\nAs soon as the WP7 is accepted, the drone starts the back transition and heads towards WP9 during transition.\r\n\r\nWhat happens in your case with the incomplete mission is that as soon as WP7 is accepted with the FW acceptance radius it starts the back transition and completes the mission at the same time.\r\n![image](https://user-images.githubusercontent.com/48206725/103875858-37d59d80-50d3-11eb-8106-69e600c842db.png)\r\nAs the mission is considered finished the vehicle goes into Loiter, but as you're still backtransitioning FW L1 logic is still at work, hence the half-circle. What I find interesting is that after BT is complete the drone doesn't stay where it is or goes to where it was at 1:22, but flies to launch position instead. I guess it's how the end-of-mission-loiter is implemented for MC drones.\r\n\r\n\r\nAdmittedly this PR has the potential to make things worse if used in a non-intended way, but if you are aware of it it gives you more flexibility (e.g. when transitioning with tail wind you can move the next WP a bit further). \r\n --> this means we need to document it well.",
          "type": "issue_comment"
        },
        {
          "author": "ghost",
          "created_at": "2021-01-07T12:29:11Z",
          "body": "@ThomasRigi thanks for the explanation. i can see the logic now.",
          "type": "issue_comment"
        },
        {
          "author": "ThomasRigi",
          "created_at": "2021-01-29T16:11:59Z",
          "body": "I don't like this new commit: https://logs.px4.io/plot_app?log=9eb1719d-eac8-49b7-9617-83b4e1a3354d\r\n\r\nBy enforcing that during transition it has to move to the waypoint where transition was triggered you kind of take away the point of this PR. ",
          "type": "issue_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2021-01-29T17:45:31Z",
          "body": "> By enforcing that during transition it has to move to the waypoint where transition was triggered \r\n\r\nWell it wouldn't have needed to accept the old waypoint anymore like it was prior this PR, but will still keep it as current position setpoint. And after some more SITLing I came to the same conclusion as you, that without the check for the transition_state it's much smoother. Thus removed the last commit again.\r\n\r\n@RomanBapst please approve if you think that it's safe enough like this.\r\n\r\n",
          "type": "issue_comment"
        },
        {
          "author": "mrpollo",
          "created_at": "2021-02-15T18:09:33Z",
          "body": "@sfuhrer looks like you are going to need to rebase, the main branch has been moving faster these days 🐇 \r\n",
          "type": "issue_comment"
        },
        {
          "author": "RomanBapst",
          "created_at": "2021-02-22T11:16:20Z",
          "body": "@dagar @ThomasRigi Can you guys update your review as well?",
          "type": "issue_comment"
        },
        {
          "author": "ThomasRigi",
          "created_at": "2021-02-22T13:17:24Z",
          "body": "I'm fine with the changes too, but I would have preferred the symmetric solution that also aims for the next WP in a front transition. This is much less critical than the back transition though, so I'm also happy if it goes in as it is now.\r\n\r\nI still don't see the potential timing issues clearly. But @dagar certainly has a better knowledge about them than I do. From my understanding of the transition logic nothing should break though if we remove L115ff completely instead of checking the RW/FW state",
          "type": "issue_comment"
        },
        {
          "author": "RomanBapst",
          "created_at": "2021-03-18T07:35:57Z",
          "body": "@ThomasRigi Have you seen that for the front transition the fixed wing position controller is generating it's own target setpoint irrelevant of what navigator is saying?\r\n\r\nhttps://github.com/PX4/Firmware/blob/40e6958bd994a29ddf73c5546ab6824dbb2ac6b1/src/modules/fw_pos_control_l1/FixedwingPositionControl.cpp#L687",
          "type": "issue_comment"
        },
        {
          "author": "ThomasRigi",
          "created_at": "2021-04-09T10:48:57Z",
          "body": "Sorry for the slow response. I vaguely recalled something like that, but wasn't aware of the details. ~~Still undeniably there is a difference in how the front transition is handled in the two logs of https://github.com/PX4/PX4-Autopilot/pull/16499#discussion_r553249245... but I have to admit I no longer understand why~~ Ok, it's me who was stupid, the drone was aligned differently before the transition started.\r\n\r\nDo you still think it is better to set this artificial heading hold waypoint for the whole duration of the front transition or could we just have it track the normal waypoints ? And in case it reaches the first FW WP while still in transition move towards the next one.\r\n\r\nI think both ways have advantages and drawbacks. In my dream world the drone can handle any type of turns during transition if needed. But I also see that if you ask for a harsh turn during transition it might not end well - even though so far what I saw looked quite stable in the air with the L1 tracking during transition.\r\n\r\nMy main concern with the \"stubborn\" heading hold is that if you have a tight geofence just flying straight no matter what might get you closer to the geofence than you'd like, e.g. with tail wind. Or also without geofence, if the drone has to do a full bank turn to backtrack just after transition it's not great either. Admittedly, in these cases you can also say badly planned mission.\r\n\r\nOn the other hand we'd have a more reliable planned trajectory if the front transition really tracks the planned WPs (as it now does with the back transition). My main worries are potential hard turns during transition, where again you can say badly planned mission. \r\n\r\nAll in all, I'd have a slight preference to tracking the planned WPs, but it's not something I'd consider blocking for this PR. ",
          "type": "issue_comment"
        },
        {
          "author": "VTOLDavid",
          "created_at": "2021-04-26T11:16:05Z",
          "body": "In my opinion, force the transition to end in a waypoint is a bad idea. In real flight you can have wind gusts, thrust assymentry on the frame, bad compass calibration or just constant wind that make the transition to end in a slightly different point that planned. Try to end in such waypoint may require large control imputs in conditions near stall, that in most airframes can generate aerodynamic control inversion (lowering the aileron to generate lift stalls the wing and generates the opposite effect). So I whould like to have the possibility to dissable that or at least limit the bank angle that this tracking can request.",
          "type": "issue_comment"
        }
      ],
      "review_comments": [
        {
          "author": "dagar",
          "created_at": "2021-01-06T15:24:37Z",
          "body": "I think we should keep some form of this, but instead of a timeout explicitly check for the desired VTOL state.",
          "path": "src/modules/navigator/mission_block.cpp",
          "position": 9,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2021-01-06T21:04:39Z",
          "body": "Alright, done in 81eceb526b931601840268c9ae92ce4bcd2e7637. Doesn't look nice but I guess that would do the trick.",
          "path": "src/modules/navigator/mission_block.cpp",
          "position": 9,
          "type": "review_comment"
        },
        {
          "author": "ThomasRigi",
          "created_at": "2021-01-07T10:43:26Z",
          "body": "On second thought I think we should just delete the lines. IMO they go against the spirit of this PR. And https://github.com/PX4/PX4-Autopilot/commit/81eceb526b931601840268c9ae92ce4bcd2e7637 is asymmetric on front and back transitions, which is weird. For front transitions you only consider the mission item reached when the transition is complete, whereas for back transition it's immediate. (During transitions the vehicle type is VEHICLE_TYPE_ROTARY_WING)\r\n\r\n1. With https://github.com/PX4/PX4-Autopilot/commit/81eceb526b931601840268c9ae92ce4bcd2e7637 : https://logs.px4.io/plot_app?log=f0d5dd0a-14be-47cc-9b08-e99fdadca76d on the front transition the drone doesn't track the path.\r\n2. Without these lines: https://logs.px4.io/plot_app?log=dca29fa0-e3ba-45e0-b8b2-e75414c71077 the front transition tracks the (badly or at least specially) planned path much better.\r\n\r\n[too_short_FT.zip](https://github.com/PX4/PX4-Autopilot/files/5781084/too_short_FT.zip)\r\nThe mission has the first FW WP way too close to the transition start to make my point. IMO the second option is better",
          "path": "src/modules/navigator/mission_block.cpp",
          "position": 9,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2021-01-08T12:28:06Z",
          "body": "Happy to remove the check if we are sure that the command is always correctly propagated (and if not, then better fix that instead).",
          "path": "src/modules/navigator/mission_block.cpp",
          "position": 9,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2021-01-11T13:29:29Z",
          "body": "@dagar what's your opinion on that? Do you have any safety concerns when removing the check again?",
          "path": "src/modules/navigator/mission_block.cpp",
          "position": 9,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2021-01-11T15:45:37Z",
          "body": "Yes, the potential timing issues on a real vehicle vs SITL lockstep. Let's check the remaining navigator VTOL transition logic to see if it matters (the work item after transition cmd).",
          "path": "src/modules/navigator/mission_block.cpp",
          "position": 9,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2021-01-13T17:17:17Z",
          "body": "@dagar so we're afraid that the transition waypoint gets accepted before the transition is triggered in the VTOL_attitude_controller? Could we use that ack https://github.com/PX4/PX4-Autopilot/blob/cabb50a67ba1e95069457649f0f8cf1727eea5f5/src/modules/vtol_att_control/vtol_att_control_main.cpp#L187? \r\n@ThomasRigi I think it would actually be okay with these checks, even though they're asymmetric and that's certainly not nice. Reasoning: For backtransition it would immediately accept the waypoint, and that's required for making the back transition smoother (original goal of this PR). For front transition it wasn't an issue so far that it only got accepted once the transition was finished (this could change fast, I know).\r\n",
          "path": "src/modules/navigator/mission_block.cpp",
          "position": 9,
          "type": "review_comment"
        },
        {
          "author": "ThomasRigi",
          "created_at": "2021-01-13T17:49:09Z",
          "body": "The PR is called \"make transitions smoother\", so in principle both can be targeted ;) But it's true that the reason for it is the back transition, and this works with the asymmetric behaviour. \r\n\r\nIf there is a reason to be worried that taking this check out might break things on a real drone we should keep the check. If not, I find the symmetric solution more elegant.\r\n\r\nThe way I understand the half a second waiting time is to make sure that `in_transition_mode` was updated so that you can monitor this until the transition is over, and not to make sure that the transition command is actually sent. But to me the recent changes in how transitions are done make it obsolete to wait until the end of the transition (for both ways) to accept the waypoint. It's just that I don't see the danger, but mayhaps that's just my lack of knowledge on some parts of PX4 code. If it helps to bring this PR in, then let's go with the asymmetric behaviour.",
          "path": "src/modules/navigator/mission_block.cpp",
          "position": 9,
          "type": "review_comment"
        },
        {
          "author": "RomanBapst",
          "created_at": "2021-01-29T12:43:03Z",
          "body": "```suggestion\r\n\t\t\treturn _navigator->get_vstatus()->vehicle_type == vehicle_status_s::VEHICLE_TYPE_ROTARY_WING && !_navigator->get_vstatus()->in_transition_mode;\r\n```",
          "path": "src/modules/navigator/mission_block.cpp",
          "position": 13,
          "type": "review_comment"
        },
        {
          "author": "RomanBapst",
          "created_at": "2021-01-29T12:43:24Z",
          "body": "```suggestion\r\n\t\t\treturn _navigator->get_vstatus()->vehicle_type == vehicle_status_s::VEHICLE_TYPE_FIXED_WING && !_navigator->get_vstatus()->in_transition_mode;\r\n```",
          "path": "src/modules/navigator/mission_block.cpp",
          "position": 19,
          "type": "review_comment"
        }
      ],
      "reviews": [
        {
          "author": "RomanBapst",
          "created_at": "",
          "body": "",
          "state": "DISMISSED",
          "type": "review"
        },
        {
          "author": "RomanBapst",
          "created_at": "",
          "body": "@sfuhrer I had a detailed look and I'm good with these changes.\r\n",
          "state": "DISMISSED",
          "type": "review"
        },
        {
          "author": "RomanBapst",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Pre-emptive geofence triggering",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/16400",
    "number": 16400,
    "created_at": "2020-12-16T13:11:56Z",
    "merged": true,
    "merged_at": "2021-01-13T09:26:11Z",
    "state": "closed",
    "conversation": {
      "author": "jkflying",
      "body": "**Describe problem solved by this pull request**\r\nCurrently, a geofence breach is triggered only after the vehicle is already in violation. This can lead to legal issues if the vehicle ends up outside of the expected area, safety issues if an obstacle is hit that the geofence was meant to avoid, and the vehicle can also be 'stuck' if the breach is continually triggered, overriding attempted user actions.\r\n\r\n**Describe your solution**\r\nPredict the motion of the vehicle and trigger the breach if it is determined that the current trajectory would result in a breach happening before the vehicle can make evasive maneuvers, if it delayed any longer. The vehicle is then re-routed to a safe hold position (stop for multirotor, loiter for fixed wing).\r\n\r\n**Describe possible alternatives**\r\nThere was also the idea of 'shrinking' the allowed flight area, however this would not be robust to different vehicle configurations or tuning.\r\n\r\n**Test data / coverage**\r\nExtensive testing both in SITL and on real vehicles (fixed wing, VTOL and multirotor) inside of Auterion. I haven't tested it yet since upstreaming, and additional testing from anyone else would be appreciated.\r\n\r\n\r\n\r\n**Additional context**\r\n![Screenshot_20201216_141033](https://user-images.githubusercontent.com/1746276/102352838-901ff080-3fa8-11eb-9a96-eb69d8b3d266.png)\r\n\r\n",
      "issue_comments": [
        {
          "author": "jkflying",
          "created_at": "2021-01-12T13:23:12Z",
          "body": "All comments addressed",
          "type": "issue_comment"
        },
        {
          "author": "LorenzMeier",
          "created_at": "2021-01-13T07:55:04Z",
          "body": "@jkflying The geofencebreach test is failing in the PR.",
          "type": "issue_comment"
        },
        {
          "author": "jkflying",
          "created_at": "2021-01-13T09:25:50Z",
          "body": "> @jkflying The geofencebreach test is failing in the PR.\r\n\r\nYep it seems `clang` is more strict with the implicit conversions from float -> double than GCC - it even complains about constants, not just variables. I've done a workaround here, and made a fix in Matrix that will prevent this for the future.",
          "type": "issue_comment"
        },
        {
          "author": "garfieldG",
          "created_at": "2021-01-28T11:37:59Z",
          "body": "https://github.com/PX4/PX4-Autopilot/issues/16679",
          "type": "issue_comment"
        }
      ],
      "review_comments": [
        {
          "author": "dagar",
          "created_at": "2020-12-16T23:33:25Z",
          "body": "Copyright header",
          "path": "src/modules/navigator/GeofenceBreachAvoidance/fake_geofence.hpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2020-12-16T23:34:56Z",
          "body": "```suggestion\r\n\t~GeofenceBreachAvoidance() = default;\r\n```",
          "path": "src/modules/navigator/GeofenceBreachAvoidance/geofence_breach_avoidance.h",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2020-12-16T23:37:06Z",
          "body": "Also require `_local_pos.v_xy_valid` here?",
          "path": "src/modules/navigator/navigator_main.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2020-12-18T09:22:54Z",
          "body": "Can you move this block into a separate method?",
          "path": "src/modules/navigator/navigator_main.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2020-12-18T09:28:56Z",
          "body": "Instead, pass `this` to `GeofenceBreachAvoidance`: `GeofenceBreachAvoidance(ModuleParams* parent) : ModuleParams(parent) {}`\r\n```suggestion\r\n```",
          "path": "src/modules/navigator/navigator_main.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2020-12-18T09:30:38Z",
          "body": "```suggestion\r\n\tbool isInsidePolygonOrCircle(double lat, double lon, float altitude) override\r\n```",
          "path": "src/modules/navigator/GeofenceBreachAvoidance/fake_geofence.hpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2020-12-18T09:31:16Z",
          "body": "```suggestion\r\n\tenum class ProbeFunction {\r\n```",
          "path": "src/modules/navigator/GeofenceBreachAvoidance/fake_geofence.hpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2020-12-18T09:32:20Z",
          "body": "Can you avoid the static and use the correct type?",
          "path": "src/modules/navigator/GeofenceBreachAvoidance/fake_geofence.hpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2020-12-18T09:39:25Z",
          "body": "Might be a detail, but this only does what I'd expect from the method name if yaw=0.",
          "path": "src/modules/navigator/GeofenceBreachAvoidance/fake_geofence.hpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2020-12-18T09:40:57Z",
          "body": "Can you include the header for these?",
          "path": "src/modules/navigator/GeofenceBreachAvoidance/fake_geofence.hpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2020-12-18T09:43:08Z",
          "body": "```suggestion\r\nvoid GeofenceBreachAvoidance::updateParams() override\r\n{\r\n    ModuleParams::updateParams();\r\n```",
          "path": "src/modules/navigator/GeofenceBreachAvoidance/geofence_breach_avoidance.cpp",
          "position": 55,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2020-12-18T09:46:56Z",
          "body": "This is the same in both cases -> you can move it out of the if and simplify:\r\n```suggestion\r\n\t\t\t\tcurrent_distance = (current_max + current_min) * 0.5f;\r\n```",
          "path": "src/modules/navigator/GeofenceBreachAvoidance/geofence_breach_avoidance.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2020-12-18T09:50:41Z",
          "body": "Can you use `GEOFENCE_CHECK_INTERVAL`?",
          "path": "src/modules/navigator/GeofenceBreachAvoidance/geofence_breach_avoidance.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "bkueng",
          "created_at": "2020-12-18T09:51:58Z",
          "body": "Same here",
          "path": "src/modules/navigator/GeofenceBreachAvoidance/geofence_breach_avoidance.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "jkflying",
          "created_at": "2021-01-11T10:19:10Z",
          "body": "This already checks for the GPS being valid via `have_geofence_position_data` , do you think it needs more?",
          "path": "src/modules/navigator/navigator_main.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "jkflying",
          "created_at": "2021-01-12T12:55:49Z",
          "body": "Moved these to a `dataman_mocks.hpp` as well",
          "path": "src/modules/navigator/GeofenceBreachAvoidance/fake_geofence.hpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "jkflying",
          "created_at": "2021-01-12T13:01:42Z",
          "body": "When you're worried about overflow or floats that implementation can actually be more accurate, but in this case I agree it is overkill.",
          "path": "src/modules/navigator/GeofenceBreachAvoidance/geofence_breach_avoidance.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "jkflying",
          "created_at": "2021-01-12T13:15:38Z",
          "body": "renamed to `XXX_north`",
          "path": "src/modules/navigator/GeofenceBreachAvoidance/fake_geofence.hpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2021-01-13T08:03:08Z",
          "body": "Depending on `GF_SOURCE` (GPS vs global position).",
          "path": "src/modules/navigator/navigator_main.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "MikeCharikov",
          "created_at": "2022-11-29T13:47:52Z",
          "body": "@dagar \r\n\r\nLooks like GF_SOURCE logic is broken here. \r\n\r\nhttps://github.com/PX4/PX4-Autopilot/issues/20677",
          "path": "src/modules/navigator/navigator_main.cpp",
          "position": 1,
          "type": "review_comment"
        }
      ],
      "reviews": [
        {
          "author": "bkueng",
          "created_at": "",
          "body": "",
          "state": "DISMISSED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Remaining flight range based RTL trigger",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/16399",
    "number": 16399,
    "created_at": "2020-12-16T11:15:07Z",
    "merged": true,
    "merged_at": "2021-01-18T15:26:54Z",
    "state": "closed",
    "conversation": {
      "author": "jkflying",
      "body": "**Describe problem solved by this pull request**\r\nCurrently the RTL is triggered by a fixed battery level, irrespective of the distance to home, wind conditions, vehicle flight speed etc. This means that the vehicle could run out of battery during a long RTL, or arrive home with still a large fraction of battery remaining during a short RTL.\r\n\r\n**Describe your solution**\r\nTake into account the flight time home during the RTL. From the RTL viability checks in navigator publish this information saying how long the RTL will take (taking into account vehicle speeds, wind speed and destination distance/direction), and what fraction of the total battery would be used by the RTL. In Commander, subscribe to this and trigger RTL if the current battery level less the battery used on RTL will take the vehicle below the existing low battery thresholds.\r\n\r\n**Describe possible alternatives**\r\nA parameter was used for \"total flight time in RTL\". This could have been taken from the power module / smart battery telemetry of the current and battery capacity values. However, for multirotor that is risky because power usage in forward flight is higher than hover, so a vehicle hovering far away would RTL too late. The parameter approach also lets users set a hard upper limit on the amount of time they would be happy with the vehicle spending in RTL, which might be useful for regulatory or safety reasons.\r\n\r\n**Test data / coverage**\r\nThis was tested extensively in Auterion, but I haven't tested it yet since upstreaming. It should get some SITL time to make sure nothing broke in the transplant, but the concept is quite solid.\r\n\r\nNote: it might be better to squash this on merge",
      "issue_comments": [
        {
          "author": "moreba1",
          "created_at": "2021-01-06T07:18:52Z",
          "body": "> A parameter was used for \"total flight time in RTL\". This could have been taken from the power module\r\n\r\nI think using \"average power consumption\" (mah/km) + \"distance to home\" is better than \"flight time in RTL\".\r\n\r\nhttps://github.com/PX4/PX4-Autopilot/pull/14819",
          "type": "issue_comment"
        },
        {
          "author": "jkflying",
          "created_at": "2021-01-12T13:55:22Z",
          "body": "> I think uisng \"average power consumption\" (mah/km) + \"distance to home\" is better than \"flight time in RTL\". #14819\r\n\r\nThat would be a nice improvement, I agree. However, I'd prefer to get this in with the current feature set, and we can work on improving it once people can already use it.",
          "type": "issue_comment"
        },
        {
          "author": "jkflying",
          "created_at": "2021-01-13T12:51:56Z",
          "body": "Out of flash again on V2 :cry: ",
          "type": "issue_comment"
        },
        {
          "author": "LorenzMeier",
          "created_at": "2021-01-18T13:01:46Z",
          "body": "Re-running CI",
          "type": "issue_comment"
        },
        {
          "author": "Antiheavy",
          "created_at": "2021-01-18T15:31:35Z",
          "body": "> > I think uisng \"average power consumption\" (mah/km) + \"distance to home\" is better than \"flight time in RTL\". #14819\r\n> \r\n> That would be a nice improvement, I agree. However, I'd prefer to get this in with the current feature set, and we can work on improving it once people can already use it.\r\n\r\nanother potential future future improvement could take into account the wind speed and direction estimate for vehicles that can estimate wind (e.g. those that have airspeed sensors).\r\n\r\nHowever, this PR is a great improvement as a first step as-is.",
          "type": "issue_comment"
        },
        {
          "author": "jkflying",
          "created_at": "2021-01-18T16:08:07Z",
          "body": "> take into account the wind speed and direction estimate\r\n\r\nIt does that already :smile: \r\n\r\nEdit: and it can also use the drag fusion wind speed estimate for multirotors without an airspeed sensor.",
          "type": "issue_comment"
        },
        {
          "author": "hamishwillee",
          "created_at": "2021-04-14T23:16:29Z",
          "body": "@jkflying You wouldn't create a PR without making it possible for people to use it - so can you point me to the docs?\r\n\r\nAssuming not a few questions:\r\n- Does this work on all vehicle types?\r\n- How do you enable/disable this feature? Is it supported in QGC - how?\r\n- How does this work? My guess is that you set low battery action to RTL. Then you set RTL_FLT_TIME to indicate max time expected for RTL. The low battery RTL will then trigger early based on the systems calculation that time taken to get home at cruise speed will trigger low battery RTL within RTL_FLT_TIME. Is that correct? And presumably you can set this to 0 just to ignore it.\r\n\r\nPlaces that might be impacted:\r\n- [Safety > Return mode settings](https://docs.px4.io/master/en/config/safety.html#return-mode-settings)\r\n- [Safety > Low battery setup](https://docs.px4.io/master/en/config/safety.html#low-battery-failsafe)\r\n- [Return mode](https://docs.px4.io/master/en/flight_modes/return.html)\r\n- Maybe some more but ^^^ are the key ones.\r\n",
          "type": "issue_comment"
        }
      ],
      "review_comments": [
        {
          "author": "dagar",
          "created_at": "2020-12-16T16:52:50Z",
          "body": "units",
          "path": "src/modules/navigator/rtl_params.c",
          "position": 11,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2020-12-17T00:05:21Z",
          "body": "vehicle_status_s::VEHICLE_TYPE_UNKNOWN = 0",
          "path": "src/modules/navigator/rtl.h",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2020-12-17T00:08:16Z",
          "body": "```suggestion\r\n\tparam_t _rtl_xy_speed{PARAM_INVALID};\r\n```",
          "path": "src/modules/navigator/rtl.h",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2020-12-17T00:08:28Z",
          "body": "```suggestion\r\n\tparam_t _rtl_descent_speed{PARAM_INVALID};\r\n```",
          "path": "src/modules/navigator/rtl.h",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "jkflying",
          "created_at": "2021-01-13T12:19:13Z",
          "body": "Is minutes a problem? It is documented in the string. It's just that a number like 15 or 30 is much easier to understand for users than 900 or 1800 if I used seconds instead.",
          "path": "src/modules/navigator/rtl_params.c",
          "position": 11,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2021-01-13T15:07:27Z",
          "body": "Minutes is fine, I mean add the unit metadata (@unit).",
          "path": "src/modules/navigator/rtl_params.c",
          "position": 11,
          "type": "review_comment"
        }
      ],
      "reviews": [
        {
          "author": "LorenzMeier",
          "created_at": "",
          "body": "Good to go!",
          "state": "COMMENTED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Various RTL improvements (mainly VTOL specific)",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/16377",
    "number": 16377,
    "created_at": "2020-12-11T15:23:13Z",
    "merged": true,
    "merged_at": "2021-01-04T10:58:17Z",
    "state": "closed",
    "conversation": {
      "author": "sfuhrer",
      "body": "Replaces https://github.com/PX4/PX4-Autopilot/pull/14728.\r\n\r\n**Describe problem solved by this pull request**\r\n- currently landing on the landing pattern doesn't seem to work (land pattern = whatever of the mission is after the DO_LAND_START marker)\r\n- high transition altitude (see https://github.com/PX4/PX4-Autopilot/pull/14728 for context)\r\n\r\n**Describe your solution**\r\nRTL logic with this PR, changes to current logic in **bold**\r\n(assuming RTL_TYPE is set to 1 (VTOL and FW default, using mission landing if available))\r\n- if close to RTL landing position and in hover, use cone RTL logic (if mission landing is planned that one is used)\r\n- if VTOL and in hover mode, use normal MC RTL strategy (climb to `RTL_RETURN_ALT`, come back and land at RTL landing position)\r\n- if DO_LAND_START is set (landing using mission landing): \r\n  - if in FW mode, go to DO_LAND_START marker in FW mode and from there on follow mission landing\r\n  - if in MC mode, go to the Land position and land there (don't follow landing pattern as in FW mode)\r\n-  if DO_LAND_START is not set \r\n   - if VTOL and in FW mode, climb to `RTL_RETURN_ALT`, fly to home, **loiter down until `RTL_DESCEND_ALT` in FW mode**, transition to hover and land\r\n\r\n**Test data / coverage**\r\nSITL tested with Standard VTOL and multicopter. \r\n\r\n**Additional context**\r\nFor VTOL, it is recommended to always fly with a mission landing planned, such that this one can be used during the RTL. Landing approaches using mission landing can be optimized for current wind direction (transition into the wind), and result in less hover time (vehicle transitions over hover, instead of while loitering around home)\r\n",
      "issue_comments": [
        {
          "author": "Antiheavy",
          "created_at": "2020-12-11T23:35:52Z",
          "body": "is this:\r\n\r\n\r\n> For VTOL, it is recommended to always fly with a mission landing planned, such that this one can be used during the RTL. Landing approaches using mission landing can be optimized for current wind direction (transition into the wind), and result in less hover time (vehicle transitions over hover, instead of while loitering around home)\r\n\r\nconsistent with this?:\r\n\r\n\r\n> * if close to home position and in hover, use cone RTL logic\r\n> \r\n> * if VTOL and in hover mode, use normal MC RTL strategy (climb to `RTL_RETURN_ALT`, come back and land)\r\n\r\nHave you considered if there should be a parameter that allows/avoids RTL at the Home location if in MC mode?  I wonder how many VTOL people would always want to use the mission landing if at all possible?  The \"return to home\" fall-back in the RTL_TYPE=1 logic was originally designed for the case when the mission landing accidentally gets deleted or gets overwritten with an infeasible landing pattern (which unfortunately is something that can easily happen).  \r\n\r\nFrom the way this PR is currently written you intend the VTOL vehicle will perform different Return mode behaviors depending on the context.  I wonder if that is how 100% of VTOL users will want it to work.  I'm not a VTOL expert so I'm not advocating one way or another, just curious.",
          "type": "issue_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2020-12-15T10:34:45Z",
          "body": "> Have you considered if there should be a parameter that allows/avoids RTL at the Home location if in MC mode?\r\n\r\nThanks for pointing this out. I actually wrote it down wrongly in the description. It will **always use the mission landing for RTL if RTL_TYPE is 1**. What changes is that it now won't follow the landing pattern (all that is after the DO_LAND_START) in hover, but directly go to Land and descend there. \r\n\r\n\r\n",
          "type": "issue_comment"
        },
        {
          "author": "moreba1",
          "created_at": "2020-12-29T12:58:36Z",
          "body": "in the master version, VTOL has a dangerous behavior when it reaches VTOL Land.\r\n@sfuhrer \r\nhttps://logs.px4.io/plot_app?log=9df156fc-233e-4b54-ad23-e82017ff47f4\r\n\r\ndesirable behavior is that VTOL transition location be near to land location to minimize power consumption, and the drone doesn't have that much tilt angle and oscillation in MC mode.",
          "type": "issue_comment"
        },
        {
          "author": "dagar",
          "created_at": "2020-12-29T17:13:23Z",
          "body": "Rebased on master.",
          "type": "issue_comment"
        },
        {
          "author": "ghost",
          "created_at": "2020-12-31T03:42:06Z",
          "body": "I also noticed that the standard_vtol back transition is behaving dangerously. it's on master and also in this pr,\r\nI noticed this on my flight on the real hardware as well. \r\njust after the back-transition it tries to do a roll maneuver in most of the times,\r\nBut every once in a while, it does a ok back-transition, without trying to roll . \r\n\r\nsame mission, two instances, same-pr (firmware), back-transition behavior is different.\r\nhttps://review.px4.io/plot_app?log=1e1bb5d2-5260-40da-bd7e-46fadf55fc6c ---> rolling\r\nhttps://review.px4.io/plot_app?log=12468162-8610-4965-831c-dd25c8edfeda ---> without roll\r\n\r\nhttps://user-images.githubusercontent.com/25317204/103393299-f0d23000-4b47-11eb-8937-cd642d604219.mp4\r\n\r\n",
          "type": "issue_comment"
        },
        {
          "author": "LorenzMeier",
          "created_at": "2020-12-31T10:27:09Z",
          "body": "Thanks for reporting - @RomanBapst @sfuhrer could you please follow up?",
          "type": "issue_comment"
        },
        {
          "author": "LorenzMeier",
          "created_at": "2021-01-04T08:48:34Z",
          "body": "@yuthikasagarage Have you reviewed your flights? It looks like the vehicle is overshooting the transition waypoint (so your plan is \"not doable\") and hence correcting. There is nothing wrong about the control performance, this seems to be more a planning UX / tuning issue than anything else. That still needs to be solved, but not necessarily in the VTOL controller.",
          "type": "issue_comment"
        },
        {
          "author": "ghost",
          "created_at": "2021-01-04T09:29:15Z",
          "body": "i will look into the flights again, and will try to tune the back transition and check whether the issue persists.\r\nhowever, with a bad planning let's say it does a back-transition in some case, i think all the back-transitions need to be on level flight even if it overshoots, just my two cents.  ",
          "type": "issue_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2021-01-04T12:40:56Z",
          "body": "@moreba1 \r\n\r\n> in the master version, VTOL has a dangerous behavior when it reaches VTOL Land.\r\n\r\nThis should be fixed with this PR, please re-test.\r\n\r\n> desirable behavior is that VTOL transition location be near to land location to minimize power consumption, and the drone doesn't have that much tilt angle and oscillation in MC mode.\r\n\r\nWith the code from this PR in, it will transition at a distance of the loiter radius from home if no mission landing is planned and the waypoint before the landing waypoint isn't at the transition altitude (RTL_DESCEND_ALT). I'm aware that this isn't optimal for minimized hover time, but at least it should be an improvement to before where it could transition 100m above home and then descend in hover. \r\n",
          "type": "issue_comment"
        },
        {
          "author": "moreba1",
          "created_at": "2021-01-28T16:12:01Z",
          "body": ">     * if in FW mode, go to DO_LAND_START marker in FW mode and from there on follow mission landing\r\n\r\nIs it possible that VTOL first climbs to RTL_RETURN_ALT and keep this attitude until it reaches to landing pattern?",
          "type": "issue_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2021-01-28T16:52:58Z",
          "body": ">Is it possible that VTOL first climbs to RTL_RETURN_ALT and keep this attitude until it reaches to landing pattern?\r\n\r\nThat should be the desired behavior. If you noticed something else then let me know, that would indicate a bug.",
          "type": "issue_comment"
        },
        {
          "author": "VTOLDavid",
          "created_at": "2021-02-10T18:34:07Z",
          "body": "> \r\n> \r\n> i will look into the flights again, and will try to tune the back transition and check whether the issue persists.\r\n> however, with a bad planning let's say it does a back-transition in some case, i think all the back-transitions need to be on level flight even if it overshoots, just my two cents.\r\n\r\nI having this problem with a tailsitter with very dangerous turns during transition. Is it possible to disable the navigation during transition? The sugested solution is to give more time to the backtransition?",
          "type": "issue_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2021-02-11T14:48:08Z",
          "body": "> I having this problem with a tailsitter with very dangerous turns during transition. Is it possible to disable the navigation during transition? The sugested solution is to give more time to the backtransition?\r\n\r\nI don't think this is directly related to this specific PR - would you mind creating a new issue, and include some flight logs in the description? Thanks!",
          "type": "issue_comment"
        },
        {
          "author": "hamishwillee",
          "created_at": "2021-03-24T06:26:02Z",
          "body": "@sfuhrer @Antiheavy Are there any docs changes related to this for PX4v1.12? My guess is yes, though it is unclear with the long thread, what delivered/what the landing behaviour is (?).\r\n\r\nLooking at the initial post, it is mostly about what should happen if RTL_TYPE is set to use a mission landing (RTL_TYPE=1) and there was no mission landing pattern defined - in which case it should fly down in FW mode to the descent altitude and then switch to MC and descend \"as per usual\". \r\n\r\nThe description is a little flawed because it does not cater for the behaviour with rally points. \r\n\r\nDocs for vtol are here:\r\nhttps://docs.px4.io/master/en/flight_modes/return.html#vtol\r\nhttps://docs.px4.io/master/en/flight_modes/return.html#mission-landing-rally-point-return-type-rtl-type-1",
          "type": "issue_comment"
        }
      ],
      "review_comments": [
        {
          "author": "dagar",
          "created_at": "2020-12-17T00:58:53Z",
          "body": "I'm not sure I follow, how would this fail if the mission landing progress was set to false immediately on first inactivation?",
          "path": "src/modules/navigator/mission.cpp",
          "position": 16,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2020-12-17T01:01:13Z",
          "body": "```suggestion\r\n\t\t\t// even if current climb altitude is below (e.g. RTL immediately after take off)\r\n```",
          "path": "src/modules/navigator/rtl.cpp",
          "position": 1,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2020-12-17T01:02:54Z",
          "body": "Now I'm wondering why this wasn't already set by default.",
          "path": "src/modules/navigator/rtl_params.c",
          "position": 28,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2020-12-18T13:20:04Z",
          "body": "Yes that's a big wonder. I found the cone RTL always really useful so far, both for VTOL in hover and MC.",
          "path": "src/modules/navigator/rtl_params.c",
          "position": 28,
          "type": "review_comment"
        },
        {
          "author": "RomanBapst",
          "created_at": "2020-12-18T13:20:06Z",
          "body": "@dagar This prevents the situation where e.g. you are on a mission landing and then RTL kicks in. You don't want to start from the beginning but continue the mission. However, if e.g. the user takes over in manual during a mission landing and then switches back, you probably want to start he mission landing from scratch, as you have no clue where exactly you are and if you are still aligned with the path.",
          "path": "src/modules/navigator/mission.cpp",
          "position": 16,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2020-12-18T14:30:06Z",
          "body": "I should have been more specific, the part I don't follow is the magic 2 seconds.",
          "path": "src/modules/navigator/mission.cpp",
          "position": 16,
          "type": "review_comment"
        },
        {
          "author": "RomanBapst",
          "created_at": "2020-12-21T11:01:58Z",
          "body": "@dagar A long study over many years has calculated this number to be the one and only reasonable value. It's almost like pi....",
          "path": "src/modules/navigator/mission.cpp",
          "position": 16,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2020-12-21T15:04:36Z",
          "body": "Why not do it immediately on the actual mission deactivation?",
          "path": "src/modules/navigator/mission.cpp",
          "position": 16,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2020-12-21T15:06:19Z",
          "body": "This is for mission -> RTL (failsafe, etc) -> mission (planned landing) with little to no delay?",
          "path": "src/modules/navigator/mission.cpp",
          "position": 16,
          "type": "review_comment"
        },
        {
          "author": "LorenzMeier",
          "created_at": "2021-01-04T10:57:52Z",
          "body": "Let's track this in a separate issue - we shouldn't be blocking an incremental move towards a much better behavior.",
          "path": "src/modules/navigator/mission.cpp",
          "position": 16,
          "type": "review_comment"
        },
        {
          "author": "sfuhrer",
          "created_at": "2021-01-05T08:21:41Z",
          "body": "Issue to track that: https://github.com/PX4/PX4-Autopilot/issues/16488",
          "path": "src/modules/navigator/mission.cpp",
          "position": 16,
          "type": "review_comment"
        },
        {
          "author": "RomanBapst",
          "created_at": "2021-01-29T13:06:28Z",
          "body": "@dagar I think I might need to explain this a bit better:\r\nWhen you are executing a mission landing and RTL kicks in due to low battery, then the mode switches from mission to RTL and back to mission (assuming you are executing a mission landing, which is the preferred choice almost always).\r\nTwo the second delay (it actually needs way less) allows the mission to just continue the landing rather than restarting the landing pattern.",
          "path": "src/modules/navigator/mission.cpp",
          "position": 16,
          "type": "review_comment"
        },
        {
          "author": "RomanBapst",
          "created_at": "2021-01-29T13:06:54Z",
          "body": "@dagar Sorry, I noticed I told you this before. What is the issue here?",
          "path": "src/modules/navigator/mission.cpp",
          "position": 16,
          "type": "review_comment"
        },
        {
          "author": "dagar",
          "created_at": "2021-01-29T14:54:56Z",
          "body": "> @dagar Sorry, I noticed I told you this before. What is the issue here?\r\n\r\nNothing necessarily, I just wanted to make sure there wasn't a potential hole for a hard to reproduce bug down the round. Eg dataman chokes reading the sdcard and there's a one off delay that's much longer than expected. \r\n￼\r\n",
          "path": "src/modules/navigator/mission.cpp",
          "position": 16,
          "type": "review_comment"
        }
      ],
      "reviews": [
        {
          "author": "RomanBapst",
          "created_at": "",
          "body": "",
          "state": "DISMISSED",
          "type": "review"
        },
        {
          "author": "LorenzMeier",
          "created_at": "",
          "body": "Reviewed, approving after intense flight testing.",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  },
  {
    "title": "Fix FOH effects after VTOL front transition",
    "url": "https://github.com/PX4/PX4-Autopilot/pull/16373",
    "number": 16373,
    "created_at": "2020-12-11T06:53:01Z",
    "merged": true,
    "merged_at": "2021-01-02T01:19:00Z",
    "state": "closed",
    "conversation": {
      "author": "RomanBapst",
      "body": "This caused the navigator to use the next waypoint (after the vtol takeoff item)\r\nto be used as target during the transition. If the altitude of that waypoint\r\nwas much higher than the takeoff altitude then there were FOH effects\r\nafter the transition which caused the vehicle to first descend before\r\nclimbing again.\r\n\r\nSigned-off-by: RomanBapst <bapstroman@gmail.com>\r\n",
      "issue_comments": [
        {
          "author": "RomanBapst",
          "created_at": "2020-12-11T07:05:15Z",
          "body": "TECS altitude setpoint with this PR:\r\n![image](https://user-images.githubusercontent.com/7610489/101873586-409c8780-3b98-11eb-9759-f49dfec67f8f.png)\r\n\r\nTECS altitude setpoint without this PR:\r\n![image](https://user-images.githubusercontent.com/7610489/101873627-5742de80-3b98-11eb-98fe-b42bf337fe61.png)\r\n",
          "type": "issue_comment"
        },
        {
          "author": "dagar",
          "created_at": "2020-12-11T15:01:00Z",
          "body": "You don't ever want to use the next item for transition? The altitude could be adjusted in the next item.",
          "type": "issue_comment"
        },
        {
          "author": "LorenzMeier",
          "created_at": "2021-01-02T01:19:41Z",
          "body": "You want to keep level during transition. The plot shows that the system is then gaining altitude on the way to the next waypoint.",
          "type": "issue_comment"
        },
        {
          "author": "dagar",
          "created_at": "2021-01-02T01:34:38Z",
          "body": "> You want to keep level during transition. The plot shows that the system is then gaining altitude on the way to the next waypoint.\r\n\r\nI know, I was talking about transition towards the next waypoint while keeping the vehicle level. Some people use this to control the direction of VTOL transition. ",
          "type": "issue_comment"
        },
        {
          "author": "LorenzMeier",
          "created_at": "2021-01-02T12:58:22Z",
          "body": "We need to get to a point where we set a heading and then let the vehicle transition on that heading. Otherwise we can run into crazy corner cases where someone sets a waypoint 90 degrees to the right or left and then complains that it's \"unstable\" or \"jerky\". So I would consider the transition atomic, configured beforehand and the vehicle comes back onto trajectory control at the end of it. You will need to set the transition up correctly and then let it execute.",
          "type": "issue_comment"
        },
        {
          "author": "dagar",
          "created_at": "2021-01-02T17:16:23Z",
          "body": "I agree with that I'd just like to see these types of potential behaviour changes (eg transition heading alignment) addressed explicitly rather than something that slipped in as a byproduct of fixing something else (FOH altitude effects) with no mention.",
          "type": "issue_comment"
        }
      ],
      "review_comments": [],
      "reviews": [
        {
          "author": "LorenzMeier",
          "created_at": "",
          "body": "",
          "state": "APPROVED",
          "type": "review"
        }
      ]
    }
  }
]